"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_app_components_common_CalendarSection_js",{

/***/ "(app-pages-browser)/./app/utils/dateUtils.js":
/*!********************************!*\
  !*** ./app/utils/dateUtils.js ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatDateString: () => (/* binding */ formatDateString),\n/* harmony export */   formatDateToISO: () => (/* binding */ formatDateToISO),\n/* harmony export */   formatThaiDate: () => (/* binding */ formatThaiDate),\n/* harmony export */   getMonths: () => (/* binding */ getMonths),\n/* harmony export */   getThaiDateNow: () => (/* binding */ getThaiDateNow),\n/* harmony export */   getUTCDateString: () => (/* binding */ getUTCDateString),\n/* harmony export */   getYearRange: () => (/* binding */ getYearRange),\n/* harmony export */   isValidDate: () => (/* binding */ isValidDate)\n/* harmony export */ });\nconst formatThaiDate = (date)=>{\n    if (!date) return 'คุณยังไม่ได้เลือกวันที่';\n    const thaiMonths = [\n        'มกราคม',\n        'กุมภาพันธ์',\n        'มีนาคม',\n        'เมษายน',\n        'พฤษภาคม',\n        'มิถุนายน',\n        'กรกฎาคม',\n        'สิงหาคม',\n        'กันยายน',\n        'ตุลาคม',\n        'พฤศจิกายน',\n        'ธันวาคม'\n    ];\n    const dateObj = new Date(date);\n    const day = dateObj.getDate();\n    const month = thaiMonths[dateObj.getMonth()];\n    const year = dateObj.getFullYear() + 543;\n    return \"\".concat(day, \" \").concat(month, \" \").concat(year);\n};\nconst getThaiDateNow = ()=>{\n    return formatThaiDate(new Date());\n};\n// Add utility function for date string formatting\nconst getUTCDateString = (date)=>{\n    if (!date) return '';\n    const d = new Date(date);\n    if (isNaN(d.getTime())) return '';\n    // สร้างวันที่ในรูปแบบ YYYY-MM-DD\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n};\n// เพิ่มฟังก์ชันสำหรับตรวจสอบความถูกต้องของวันที่\nconst isValidDate = (date)=>{\n    const d = new Date(date);\n    return d instanceof Date && !isNaN(d);\n};\n// เพิ่มฟังก์ชันสำหรับฟอร์แมตวันที่ให้อยู่ในรูปแบบ YYYY-MM-DD\nconst formatDateToISO = (date)=>{\n    if (!date) return '';\n    const d = new Date(date);\n    if (!isValidDate(d)) return '';\n    return d.toISOString().split('T')[0];\n};\n// เพิ่มฟังก์ชันจาก Calendar.js\nconst formatDateString = (date)=>{\n    const d = new Date(date);\n    const year = d.getFullYear();\n    const month = String(d.getMonth() + 1).padStart(2, '0');\n    const day = String(d.getDate()).padStart(2, '0');\n    return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n};\nconst getMonths = ()=>[\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\"\n    ];\nconst getYearRange = (currentYear)=>{\n    const years = [];\n    for(let year = 2000; year <= 4000; year++){\n        years.push(year);\n    }\n    return years;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9kYXRlVXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBTyxNQUFNQSxpQkFBaUIsQ0FBQ0M7SUFDM0IsSUFBSSxDQUFDQSxNQUFNLE9BQU87SUFFbEIsTUFBTUMsYUFBYTtRQUNmO1FBQVU7UUFBYztRQUFVO1FBQVU7UUFBVztRQUN2RDtRQUFXO1FBQVc7UUFBVztRQUFVO1FBQWE7S0FDM0Q7SUFFRCxNQUFNQyxVQUFVLElBQUlDLEtBQUtIO0lBQ3pCLE1BQU1JLE1BQU1GLFFBQVFHLE9BQU87SUFDM0IsTUFBTUMsUUFBUUwsVUFBVSxDQUFDQyxRQUFRSyxRQUFRLEdBQUc7SUFDNUMsTUFBTUMsT0FBT04sUUFBUU8sV0FBVyxLQUFLO0lBRXJDLE9BQU8sR0FBVUgsT0FBUEYsS0FBSSxLQUFZSSxPQUFURixPQUFNLEtBQVEsT0FBTEU7QUFDOUIsRUFBRTtBQUVLLE1BQU1FLGlCQUFpQjtJQUMxQixPQUFPWCxlQUFlLElBQUlJO0FBQzlCLEVBQUU7QUFFRixrREFBa0Q7QUFDM0MsTUFBTVEsbUJBQW1CLENBQUNYO0lBQzdCLElBQUksQ0FBQ0EsTUFBTSxPQUFPO0lBRWxCLE1BQU1ZLElBQUksSUFBSVQsS0FBS0g7SUFDbkIsSUFBSWEsTUFBTUQsRUFBRUUsT0FBTyxLQUFLLE9BQU87SUFFL0IsaUNBQWlDO0lBQ2pDLE1BQU1OLE9BQU9JLEVBQUVILFdBQVc7SUFDMUIsTUFBTUgsUUFBUVMsT0FBT0gsRUFBRUwsUUFBUSxLQUFLLEdBQUdTLFFBQVEsQ0FBQyxHQUFHO0lBQ25ELE1BQU1aLE1BQU1XLE9BQU9ILEVBQUVQLE9BQU8sSUFBSVcsUUFBUSxDQUFDLEdBQUc7SUFFNUMsT0FBTyxHQUFXVixPQUFSRSxNQUFLLEtBQVlKLE9BQVRFLE9BQU0sS0FBTyxPQUFKRjtBQUMvQixFQUFFO0FBRUYsaURBQWlEO0FBQzFDLE1BQU1hLGNBQWMsQ0FBQ2pCO0lBQ3hCLE1BQU1ZLElBQUksSUFBSVQsS0FBS0g7SUFDbkIsT0FBT1ksYUFBYVQsUUFBUSxDQUFDVSxNQUFNRDtBQUN2QyxFQUFFO0FBRUYsNkRBQTZEO0FBQ3RELE1BQU1NLGtCQUFrQixDQUFDbEI7SUFDNUIsSUFBSSxDQUFDQSxNQUFNLE9BQU87SUFDbEIsTUFBTVksSUFBSSxJQUFJVCxLQUFLSDtJQUNuQixJQUFJLENBQUNpQixZQUFZTCxJQUFJLE9BQU87SUFDNUIsT0FBT0EsRUFBRU8sV0FBVyxHQUFHQyxLQUFLLENBQUMsSUFBSSxDQUFDLEVBQUU7QUFDeEMsRUFBRTtBQUVGLCtCQUErQjtBQUN4QixNQUFNQyxtQkFBbUIsQ0FBQ3JCO0lBQzdCLE1BQU1ZLElBQUksSUFBSVQsS0FBS0g7SUFDbkIsTUFBTVEsT0FBT0ksRUFBRUgsV0FBVztJQUMxQixNQUFNSCxRQUFRUyxPQUFPSCxFQUFFTCxRQUFRLEtBQUssR0FBR1MsUUFBUSxDQUFDLEdBQUc7SUFDbkQsTUFBTVosTUFBTVcsT0FBT0gsRUFBRVAsT0FBTyxJQUFJVyxRQUFRLENBQUMsR0FBRztJQUM1QyxPQUFPLEdBQVdWLE9BQVJFLE1BQUssS0FBWUosT0FBVEUsT0FBTSxLQUFPLE9BQUpGO0FBQy9CLEVBQUU7QUFFSyxNQUFNa0IsWUFBWSxJQUFNO1FBQzNCO1FBQVc7UUFBWTtRQUFTO1FBQVM7UUFBTztRQUNoRDtRQUFRO1FBQVU7UUFBYTtRQUFXO1FBQVk7S0FDekQsQ0FBQztBQUVLLE1BQU1DLGVBQWUsQ0FBQ0M7SUFDekIsTUFBTUMsUUFBUSxFQUFFO0lBQ2hCLElBQUssSUFBSWpCLE9BQU8sTUFBTUEsUUFBUSxNQUFNQSxPQUFRO1FBQ3hDaUIsTUFBTUMsSUFBSSxDQUFDbEI7SUFDZjtJQUNBLE9BQU9pQjtBQUNYLEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQl9TSVJcXE9uZURyaXZlXFzguYDguJTguKrguIHguYzguJfguYfguK3guJtcXEFjdGl2ZSAxNC0zLTIwMjVcXFN1bW1hcnlfb2ZfUGVyc29ubmVsX1JhdGlvXFxhcHBcXHV0aWxzXFxkYXRlVXRpbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGZvcm1hdFRoYWlEYXRlID0gKGRhdGUpID0+IHtcbiAgICBpZiAoIWRhdGUpIHJldHVybiAn4LiE4Li44LiT4Lii4Lix4LiH4LmE4Lih4LmI4LmE4LiU4LmJ4LmA4Lil4Li34Lit4LiB4Lin4Lix4LiZ4LiX4Li14LmIJztcblxuICAgIGNvbnN0IHRoYWlNb250aHMgPSBbXG4gICAgICAgICfguKHguIHguKPguLLguITguKEnLCAn4LiB4Li44Lih4Lig4Liy4Lie4Lix4LiZ4LiY4LmMJywgJ+C4oeC4teC4meC4suC4hOC4oScsICfguYDguKHguKnguLLguKLguJknLCAn4Lie4Lik4Lip4Lig4Liy4LiE4LihJywgJ+C4oeC4tOC4luC4uOC4meC4suC4ouC4mScsXG4gICAgICAgICfguIHguKPguIHguI7guLLguITguKEnLCAn4Liq4Li04LiH4Lir4Liy4LiE4LihJywgJ+C4geC4seC4meC4ouC4suC4ouC4mScsICfguJXguLjguKXguLLguITguKEnLCAn4Lie4Lik4Lio4LiI4Li04LiB4Liy4Lii4LiZJywgJ+C4mOC4seC4meC4p+C4suC4hOC4oSdcbiAgICBdO1xuXG4gICAgY29uc3QgZGF0ZU9iaiA9IG5ldyBEYXRlKGRhdGUpO1xuICAgIGNvbnN0IGRheSA9IGRhdGVPYmouZ2V0RGF0ZSgpO1xuICAgIGNvbnN0IG1vbnRoID0gdGhhaU1vbnRoc1tkYXRlT2JqLmdldE1vbnRoKCldO1xuICAgIGNvbnN0IHllYXIgPSBkYXRlT2JqLmdldEZ1bGxZZWFyKCkgKyA1NDM7XG5cbiAgICByZXR1cm4gYCR7ZGF5fSAke21vbnRofSAke3llYXJ9YDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRUaGFpRGF0ZU5vdyA9ICgpID0+IHtcbiAgICByZXR1cm4gZm9ybWF0VGhhaURhdGUobmV3IERhdGUoKSk7XG59O1xuXG4vLyBBZGQgdXRpbGl0eSBmdW5jdGlvbiBmb3IgZGF0ZSBzdHJpbmcgZm9ybWF0dGluZ1xuZXhwb3J0IGNvbnN0IGdldFVUQ0RhdGVTdHJpbmcgPSAoZGF0ZSkgPT4ge1xuICAgIGlmICghZGF0ZSkgcmV0dXJuICcnO1xuICAgIFxuICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICBpZiAoaXNOYU4oZC5nZXRUaW1lKCkpKSByZXR1cm4gJyc7XG4gICAgXG4gICAgLy8g4Liq4Lij4LmJ4Liy4LiH4Lin4Lix4LiZ4LiX4Li14LmI4LmD4LiZ4Lij4Li54Lib4LmB4Lia4LiaIFlZWVktTU0tRERcbiAgICBjb25zdCB5ZWFyID0gZC5nZXRGdWxsWWVhcigpO1xuICAgIGNvbnN0IG1vbnRoID0gU3RyaW5nKGQuZ2V0TW9udGgoKSArIDEpLnBhZFN0YXJ0KDIsICcwJyk7XG4gICAgY29uc3QgZGF5ID0gU3RyaW5nKGQuZ2V0RGF0ZSgpKS5wYWRTdGFydCgyLCAnMCcpO1xuICAgIFxuICAgIHJldHVybiBgJHt5ZWFyfS0ke21vbnRofS0ke2RheX1gO1xufTtcblxuLy8g4LmA4Lie4Li04LmI4Lih4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4Liq4Liz4Lir4Lij4Lix4Lia4LiV4Lij4Lin4LiI4Liq4Lit4Lia4LiE4Lin4Liy4Lih4LiW4Li54LiB4LiV4LmJ4Lit4LiH4LiC4Lit4LiH4Lin4Lix4LiZ4LiX4Li14LmIXG5leHBvcnQgY29uc3QgaXNWYWxpZERhdGUgPSAoZGF0ZSkgPT4ge1xuICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICByZXR1cm4gZCBpbnN0YW5jZW9mIERhdGUgJiYgIWlzTmFOKGQpO1xufTtcblxuLy8g4LmA4Lie4Li04LmI4Lih4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4Liq4Liz4Lir4Lij4Lix4Lia4Lif4Lit4Lij4LmM4LmB4Lih4LiV4Lin4Lix4LiZ4LiX4Li14LmI4LmD4Lir4LmJ4Lit4Lii4Li54LmI4LmD4LiZ4Lij4Li54Lib4LmB4Lia4LiaIFlZWVktTU0tRERcbmV4cG9ydCBjb25zdCBmb3JtYXREYXRlVG9JU08gPSAoZGF0ZSkgPT4ge1xuICAgIGlmICghZGF0ZSkgcmV0dXJuICcnO1xuICAgIGNvbnN0IGQgPSBuZXcgRGF0ZShkYXRlKTtcbiAgICBpZiAoIWlzVmFsaWREYXRlKGQpKSByZXR1cm4gJyc7XG4gICAgcmV0dXJuIGQudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdO1xufTtcblxuLy8g4LmA4Lie4Li04LmI4Lih4Lif4Lix4LiH4LiB4LmM4LiK4Lix4LiZ4LiI4Liy4LiBIENhbGVuZGFyLmpzXG5leHBvcnQgY29uc3QgZm9ybWF0RGF0ZVN0cmluZyA9IChkYXRlKSA9PiB7XG4gICAgY29uc3QgZCA9IG5ldyBEYXRlKGRhdGUpO1xuICAgIGNvbnN0IHllYXIgPSBkLmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgbW9udGggPSBTdHJpbmcoZC5nZXRNb250aCgpICsgMSkucGFkU3RhcnQoMiwgJzAnKTtcbiAgICBjb25zdCBkYXkgPSBTdHJpbmcoZC5nZXREYXRlKCkpLnBhZFN0YXJ0KDIsICcwJyk7XG4gICAgcmV0dXJuIGAke3llYXJ9LSR7bW9udGh9LSR7ZGF5fWA7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TW9udGhzID0gKCkgPT4gW1xuICAgIFwiSmFudWFyeVwiLCBcIkZlYnJ1YXJ5XCIsIFwiTWFyY2hcIiwgXCJBcHJpbFwiLCBcIk1heVwiLCBcIkp1bmVcIixcbiAgICBcIkp1bHlcIiwgXCJBdWd1c3RcIiwgXCJTZXB0ZW1iZXJcIiwgXCJPY3RvYmVyXCIsIFwiTm92ZW1iZXJcIiwgXCJEZWNlbWJlclwiXG5dO1xuXG5leHBvcnQgY29uc3QgZ2V0WWVhclJhbmdlID0gKGN1cnJlbnRZZWFyKSA9PiB7XG4gICAgY29uc3QgeWVhcnMgPSBbXTtcbiAgICBmb3IgKGxldCB5ZWFyID0gMjAwMDsgeWVhciA8PSA0MDAwOyB5ZWFyKyspIHtcbiAgICAgICAgeWVhcnMucHVzaCh5ZWFyKTtcbiAgICB9XG4gICAgcmV0dXJuIHllYXJzO1xufTtcbiJdLCJuYW1lcyI6WyJmb3JtYXRUaGFpRGF0ZSIsImRhdGUiLCJ0aGFpTW9udGhzIiwiZGF0ZU9iaiIsIkRhdGUiLCJkYXkiLCJnZXREYXRlIiwibW9udGgiLCJnZXRNb250aCIsInllYXIiLCJnZXRGdWxsWWVhciIsImdldFRoYWlEYXRlTm93IiwiZ2V0VVRDRGF0ZVN0cmluZyIsImQiLCJpc05hTiIsImdldFRpbWUiLCJTdHJpbmciLCJwYWRTdGFydCIsImlzVmFsaWREYXRlIiwiZm9ybWF0RGF0ZVRvSVNPIiwidG9JU09TdHJpbmciLCJzcGxpdCIsImZvcm1hdERhdGVTdHJpbmciLCJnZXRNb250aHMiLCJnZXRZZWFyUmFuZ2UiLCJjdXJyZW50WWVhciIsInllYXJzIiwicHVzaCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/dateUtils.js\n"));

/***/ })

});