"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_app_context_AuthContext_js"],{

/***/ "(app-pages-browser)/./app/context/AuthContext.js":
/*!************************************!*\
  !*** ./app/context/AuthContext.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/firebase */ \"(app-pages-browser)/./app/lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/dataAccess */ \"(app-pages-browser)/./app/lib/dataAccess.js\");\n/* harmony import */ var _utils_sessionRecording__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/sessionRecording */ \"(app-pages-browser)/./app/utils/sessionRecording.js\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n// ระยะเวลาที่ session token หมดอายุ (20 นาที)\nconst SESSION_EXPIRY_TIME = 20 * 60 * 1000; // 20 นาที ในมิลลิวินาที\n// สร้าง session token แบบสุ่ม\nconst generateSessionToken = ()=>{\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + Date.now().toString(36);\n};\n// Initialize with default values including the function signatures\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    loading: true,\n    isAuthenticated: false,\n    login: async (username, password)=>{},\n    logout: ()=>{}\n});\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [authError, setAuthError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Check if user is stored in sessionStorage\n            const checkSessionStorage = {\n                \"AuthProvider.useEffect.checkSessionStorage\": ()=>{\n                    console.log('Checking sessionStorage for user data');\n                    try {\n                        // ตรวจสอบว่า sessionStorage พร้อมใช้งานหรือไม่\n                        if ( false || !window.sessionStorage) {\n                            console.log('sessionStorage is not available');\n                            setLoading(false);\n                            return;\n                        }\n                        const storedUser = sessionStorage.getItem('user');\n                        console.log('User data in sessionStorage:', storedUser ? 'Found' : 'Not found');\n                        if (storedUser) {\n                            try {\n                                const userData = JSON.parse(storedUser);\n                                console.log('Successfully parsed user data');\n                                setUser(userData);\n                                // ตรวจสอบความถูกต้องของ session\n                                validateUserSession(userData);\n                            } catch (parseError) {\n                                console.error('Error parsing user data from sessionStorage:', parseError);\n                                // ล้างข้อมูลที่อาจเสียหาย\n                                sessionStorage.removeItem('user');\n                            }\n                        }\n                    } catch (error) {\n                        console.error('Error checking sessionStorage:', error);\n                        setAuthError(error.message || 'เกิดข้อผิดพลาดในการตรวจสอบข้อมูลผู้ใช้');\n                    } finally{\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.checkSessionStorage\"];\n            // หน่วงเวลาเล็กน้อยเพื่อให้แน่ใจว่า client side hydration เสร็จสมบูรณ์\n            const timer = setTimeout({\n                \"AuthProvider.useEffect.timer\": ()=>{\n                    checkSessionStorage();\n                }\n            }[\"AuthProvider.useEffect.timer\"], 100);\n            return ({\n                \"AuthProvider.useEffect\": ()=>clearTimeout(timer)\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // ติดตามการเปลี่ยนแปลงของ session\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // ตั้ง listener เพื่อติดตามการเปลี่ยนแปลงของ session\n            let unsubscribe = {\n                \"AuthProvider.useEffect.unsubscribe\": ()=>{}\n            }[\"AuthProvider.useEffect.unsubscribe\"];\n            if (user && user.uid && user.sessionId) {\n                // ติดตามการเปลี่ยนแปลงของเอกสาร session ปัจจุบัน\n                unsubscribe = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.onSnapshot)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'userSessions', user.sessionId), {\n                    \"AuthProvider.useEffect\": (snapshot)=>{\n                        if (snapshot.exists()) {\n                            const sessionData = snapshot.data();\n                            // ถ้า session ไม่ active แล้ว ให้ logout อัตโนมัติ\n                            if (!sessionData.active) {\n                                console.log('Session expired or invalidated, logging out...');\n                                logout(false); // ไม่ต้องเรียก invalidateSession เพราะ session ถูกยกเลิกไปแล้ว\n                            }\n                        } else {\n                            // ไม่พบ session ให้ logout\n                            console.log('Session not found, logging out...');\n                            logout(false);\n                        }\n                    }\n                }[\"AuthProvider.useEffect\"], {\n                    \"AuthProvider.useEffect\": (error)=>{\n                        console.error('Error listening to session changes:', error);\n                    }\n                }[\"AuthProvider.useEffect\"]);\n            }\n            // Clean up listener เมื่อ component unmount หรือ user เปลี่ยน\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    if (unsubscribe) {\n                        unsubscribe();\n                    }\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        user === null || user === void 0 ? void 0 : user.uid,\n        user === null || user === void 0 ? void 0 : user.sessionId\n    ]);\n    // ฟังก์ชันตรวจสอบความถูกต้องของ session\n    const validateUserSession = async (user)=>{\n        if (!user || !user.uid || !user.sessionId) {\n            setUser(null);\n            sessionStorage.removeItem('user');\n            return;\n        }\n        try {\n            const isValid = await (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.validateSession)(user.uid, user.sessionId);\n            if (!isValid) {\n                // ถ้า session ไม่ถูกต้อง ให้ logout\n                console.log('Invalid session, logging out...');\n                logout(false);\n            }\n        } catch (error) {\n            console.error('Error validating session:', error);\n        }\n    };\n    // เริ่มการตรวจสอบ session อย่างสม่ำเสมอ\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            let sessionCheckInterval;\n            // ฟังก์ชันตรวจสอบ session สำหรับผู้ใช้ที่ login แล้ว\n            const checkCurrentSession = {\n                \"AuthProvider.useEffect.checkCurrentSession\": async ()=>{\n                    if (!user || !user.uid) return;\n                    try {\n                        // ตรวจสอบ session ปัจจุบันจาก Firestore\n                        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'users', user.uid);\n                        const userDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.getDoc)(userRef);\n                        if (!userDoc.exists()) return;\n                        const userData = userDoc.data();\n                        const currentSessionToken = sessionStorage.getItem('sessionToken');\n                        // ถ้า session token ไม่ตรงกัน แสดงว่ามีคนอื่น login เข้ามาใหม่\n                        if (userData.sessionToken && userData.sessionToken !== currentSessionToken) {\n                            console.log('Another session detected, logging out');\n                            logout();\n                            alert('บัญชีของคุณถูกใช้งานที่อื่น คุณถูกออกจากระบบโดยอัตโนมัติ');\n                            return;\n                        }\n                        // ตรวจสอบว่า session หมดอายุหรือไม่\n                        if (userData.lastActivity) {\n                            const lastActivity = userData.lastActivity.toDate ? userData.lastActivity.toDate() : new Date(userData.lastActivity);\n                            const now = new Date();\n                            const timeDiff = now.getTime() - lastActivity.getTime();\n                            if (timeDiff > SESSION_EXPIRY_TIME) {\n                                console.log('Session expired, logging out');\n                                logout();\n                                alert('เซสชันของคุณหมดอายุ กรุณาเข้าสู่ระบบใหม่');\n                                return;\n                            }\n                            // อัปเดตเวลากิจกรรมล่าสุด\n                            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(userRef, {\n                                lastActivity: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n                            });\n                        }\n                    } catch (error) {\n                        console.error('Error checking session:', error);\n                    }\n                }\n            }[\"AuthProvider.useEffect.checkCurrentSession\"];\n            if (user && !loading) {\n                // ตรวจสอบทันทีหลัง login\n                checkCurrentSession();\n                // ตั้งเวลาตรวจสอบทุก 1 นาที\n                sessionCheckInterval = setInterval(checkCurrentSession, 60000);\n            }\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    if (sessionCheckInterval) {\n                        clearInterval(sessionCheckInterval);\n                    }\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        user,\n        loading\n    ]);\n    // Login function\n    const login = async (username, password)=>{\n        console.log('Login function called with username:', username);\n        try {\n            const result = await (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.loginUser)(username, password);\n            if (result && result.success) {\n                // สร้าง session token ใหม่\n                const sessionToken = generateSessionToken();\n                // บันทึก token ลง sessionStorage\n                sessionStorage.setItem('sessionToken', sessionToken);\n                sessionStorage.setItem('user', JSON.stringify(result.user));\n                setUser(result.user);\n                // บันทึก session token และเวลาลงใน Firestore\n                const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'users', result.user.uid);\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(userRef, {\n                    sessionToken: sessionToken,\n                    lastActivity: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)(),\n                    lastLogin: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n                });\n                // Wrap logging in try-catch\n                try {\n                    (0,_utils_sessionRecording__WEBPACK_IMPORTED_MODULE_5__.logEvent)('user_login', {\n                        userId: result.user.uid,\n                        username: username,\n                        sessionId: result.user.sessionId,\n                        role: result.user.role,\n                        name: result.user.displayName,\n                        timestamp: new Date().toISOString(),\n                        action: 'Login success'\n                    });\n                } catch (logError) {\n                    console.warn('Login logging failed:', logError);\n                }\n                return result;\n            }\n            return result;\n        } catch (error) {\n            console.error('Login error:', error);\n            return {\n                success: false,\n                error: error.message || 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ'\n            };\n        }\n    };\n    // Logout function\n    const logout = function() {\n        let invalidateCurrentSession = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true;\n        try {\n            const userId = user === null || user === void 0 ? void 0 : user.uid;\n            const sessionId = user === null || user === void 0 ? void 0 : user.sessionId;\n            // ถ้ามี user และ uid ให้ลบ session token ออกจาก Firestore\n            if (userId) {\n                const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.doc)(_lib_firebase__WEBPACK_IMPORTED_MODULE_2__.db, 'users', userId);\n                (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.updateDoc)(userRef, {\n                    sessionToken: null,\n                    lastActivity: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_3__.serverTimestamp)()\n                }).catch((err)=>console.error('Error clearing session:', err));\n            }\n            // ถ้าต้องการยกเลิก session ปัจจุบัน\n            if (invalidateCurrentSession && sessionId) {\n                (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.invalidateSession)(sessionId).catch((error)=>{\n                    console.error('Error invalidating session:', error);\n                });\n            }\n            // ลบข้อมูลออกจาก sessionStorage\n            sessionStorage.removeItem('sessionToken');\n            sessionStorage.removeItem('user');\n            setUser(null);\n            // บันทึกการออกจากระบบ\n            (0,_utils_sessionRecording__WEBPACK_IMPORTED_MODULE_5__.logEvent)('user_logout', {\n                userId,\n                username: user === null || user === void 0 ? void 0 : user.username,\n                sessionId,\n                role: user === null || user === void 0 ? void 0 : user.role,\n                name: user === null || user === void 0 ? void 0 : user.displayName,\n                timestamp: new Date().toISOString(),\n                action: 'Logout success'\n            });\n            return true;\n        } catch (error) {\n            console.error('Logout error:', error);\n            return false;\n        }\n    };\n    // Check if user is authenticated\n    const isAuthenticated = user !== null;\n    // Make sure login is included in the context value\n    const value = {\n        user,\n        loading,\n        isAuthenticated: !!user,\n        login,\n        logout\n    };\n    console.log('AuthContext value:', {\n        user: !!value.user,\n        loading: value.loading,\n        isAuthenticated: value.isAuthenticated,\n        hasLogin: typeof value.login === 'function',\n        hasLogout: typeof value.logout === 'function'\n    });\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\B_SIR\\\\OneDrive\\\\เดสก์ท็อป\\\\Active 14-3-2025\\\\Summary_of_Personnel_Ratio\\\\app\\\\context\\\\AuthContext.js\",\n        lineNumber: 316,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"76MNfp0tazfQpgpif3PspRKGE6w=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/context/AuthContext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/lib/dataAccess.js":
/*!*******************************!*\
  !*** ./app/lib/dataAccess.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUser: () => (/* binding */ addUser),\n/* harmony export */   checkActiveSession: () => (/* binding */ checkActiveSession),\n/* harmony export */   checkLast7DaysData: () => (/* binding */ checkLast7DaysData),\n/* harmony export */   createUserSession: () => (/* binding */ createUserSession),\n/* harmony export */   deleteUser: () => (/* binding */ deleteUser),\n/* harmony export */   deleteWardDataDraft: () => (/* binding */ deleteWardDataDraft),\n/* harmony export */   findUserByUsername: () => (/* binding */ findUserByUsername),\n/* harmony export */   getAllUsers: () => (/* binding */ getAllUsers),\n/* harmony export */   getLatestDraft: () => (/* binding */ getLatestDraft),\n/* harmony export */   getStaffRecords: () => (/* binding */ getStaffRecords),\n/* harmony export */   getUserDrafts: () => (/* binding */ getUserDrafts),\n/* harmony export */   getWardDailyRecords: () => (/* binding */ getWardDailyRecords),\n/* harmony export */   invalidateSession: () => (/* binding */ invalidateSession),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   saveStaffRecord: () => (/* binding */ saveStaffRecord),\n/* harmony export */   saveWardDailyRecord: () => (/* binding */ saveWardDailyRecord),\n/* harmony export */   saveWardDataDraft: () => (/* binding */ saveWardDataDraft),\n/* harmony export */   updateAllUsersNameFields: () => (/* binding */ updateAllUsersNameFields),\n/* harmony export */   updateUser: () => (/* binding */ updateUser),\n/* harmony export */   validateSession: () => (/* binding */ validateSession)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./app/lib/firebase.js\");\n/* __next_internal_client_entry_do_not_use__ findUserByUsername,loginUser,getWardDailyRecords,getStaffRecords,saveStaffRecord,saveWardDailyRecord,getAllUsers,addUser,updateUser,deleteUser,updateAllUsersNameFields,checkActiveSession,invalidateSession,createUserSession,validateSession,checkLast7DaysData,saveWardDataDraft,getUserDrafts,deleteWardDataDraft,getLatestDraft auto */ \n\n// สถานะการใช้งานโหมดจำลองข้อมูล\nlet useMockData = false; // ใช้ Firebase โดยตรง\n// รีเซ็ตค่าใน localStorage เพื่อให้แน่ใจว่าใช้ค่า false\nif (true) {\n    localStorage.removeItem('useMockData');\n    localStorage.setItem('useMockData', 'false');\n}\n/**\r\n * ฟังก์ชันค้นหาผู้ใช้ตาม username\r\n */ const findUserByUsername = async (username)=>{\n    try {\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('username', '==', username));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            return null;\n        }\n        const userDoc = querySnapshot.docs[0];\n        return {\n            id: userDoc.id,\n            ...userDoc.data()\n        };\n    } catch (error) {\n        console.error('Error finding user:', error.message);\n        throw error;\n    }\n};\n/**\r\n * ฟังก์ชันเข้าสู่ระบบ\r\n */ const loginUser = async (username, password)=>{\n    try {\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('username', '==', username));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            console.log(\"User not found in database:\", username);\n            return {\n                success: false,\n                error: 'User not found'\n            };\n        }\n        const userDoc = querySnapshot.docs[0].data();\n        const userId = querySnapshot.docs[0].id;\n        console.log(\"Found user:\", username, \"Checking password...\");\n        if (userDoc.password !== password) {\n            console.log(\"Invalid password for user:\", username);\n            return {\n                success: false,\n                error: 'Invalid password'\n            };\n        }\n        console.log(\"Login successful for user:\", username);\n        // ตรวจสอบว่าผู้ใช้มี active session อยู่หรือไม่\n        const existingSession = await checkActiveSession(userId);\n        if (existingSession) {\n            // ถ้ามี session อยู่แล้ว ให้ทำการยกเลิก session เก่า\n            await invalidateSession(existingSession.id);\n        }\n        // สร้าง session ใหม่\n        const sessionId = await createUserSession(userId, username);\n        return {\n            success: true,\n            user: {\n                uid: userId,\n                sessionId: sessionId,\n                ...userDoc\n            }\n        };\n    } catch (error) {\n        console.error('Login error:', error.message);\n        return {\n            success: false,\n            error: 'Login failed: ' + error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันดึงข้อมูล ward daily records\r\n */ const getWardDailyRecords = async function(date) {\n    let wardId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    try {\n        const wardDailyRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDailyRecords');\n        let q;\n        if (wardId) {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(wardDailyRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId));\n        } else {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(wardDailyRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date));\n        }\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        return querySnapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error('Error getting ward records:', error.message);\n        return [];\n    }\n};\n/**\r\n * ฟังก์ชันดึงข้อมูล staff records\r\n */ const getStaffRecords = async function(date) {\n    let shift = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    try {\n        const recordsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'staffRecords');\n        let q;\n        if (shift) {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(recordsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift));\n        } else {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(recordsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date));\n        }\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        return querySnapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error('Error getting staff records:', error.message);\n        return [];\n    }\n};\n/**\r\n * ฟังก์ชันบันทึกข้อมูล staff records\r\n */ const saveStaffRecord = async function(recordData) {\n    let recordId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;\n    try {\n        if (recordId) {\n            // Update existing record\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'staffRecords', recordId), {\n                ...recordData,\n                lastModified: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            });\n            return {\n                success: true,\n                id: recordId\n            };\n        } else {\n            // Create new record\n            const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'staffRecords'), {\n                ...recordData,\n                timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n                lastModified: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n            });\n            return {\n                success: true,\n                id: docRef.id\n            };\n        }\n    } catch (error) {\n        console.error('Error saving staff record:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันบันทึกข้อมูล ward daily records\r\n */ const saveWardDailyRecord = async (wardData)=>{\n    try {\n        const { wardId, date } = wardData;\n        const docId = \"\".concat(date, \"_\").concat(wardId);\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDailyRecords', docId), {\n            ...wardData,\n            lastUpdated: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        }, {\n            merge: true\n        });\n        return {\n            success: true,\n            id: docId\n        };\n    } catch (error) {\n        console.error('Error saving ward daily record:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันดึงข้อมูลผู้ใช้ทั้งหมด\r\n */ const getAllUsers = async ()=>{\n    try {\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(usersRef);\n        return querySnapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error('Error getting users:', error.message);\n        return [];\n    }\n};\n/**\r\n * ฟังก์ชันเพิ่มผู้ใช้ใหม่\r\n */ const addUser = async (userData)=>{\n    try {\n        const userDataWithTimestamps = {\n            ...userData,\n            createdAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        };\n        const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users'), userDataWithTimestamps);\n        return {\n            success: true,\n            id: docRef.id\n        };\n    } catch (error) {\n        console.error('Error adding user:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันอัพเดทข้อมูลผู้ใช้\r\n */ const updateUser = async (userId, userData)=>{\n    try {\n        const userDataWithTimestamp = {\n            ...userData,\n            updatedAt: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        };\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userId), userDataWithTimestamp);\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error updating user:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันลบผู้ใช้\r\n */ const deleteUser = async (userId)=>{\n    try {\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userId));\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error deleting user:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันอัพเดทข้อมูล firstName, lastName และ position จาก fullName และ role สำหรับผู้ใช้ทั้งหมด\r\n * สำหรับ Admin ใช้งาน (กรณีที่ต้องการอัพเดทข้อมูลทั้งหมดในครั้งเดียว)\r\n */ const updateAllUsersNameFields = async ()=>{\n    try {\n        const users = await getAllUsers();\n        const updatePromises = users.map(async (user)=>{\n            const updates = {};\n            // แยก firstname และ lastname จาก fullName\n            if ((!user.firstName || !user.lastName) && user.fullName) {\n                const nameParts = (user.fullName || '').split(' ');\n                updates.firstName = nameParts[0] || '';\n                updates.lastName = nameParts.slice(1).join(' ') || '';\n            }\n            // กำหนด position ตาม role ถ้ายังไม่มี\n            if (!user.position) {\n                if (user.role && user.role.toLowerCase() === 'admin') {\n                    updates.position = 'ผู้ดูแลระบบ';\n                } else {\n                    updates.position = 'เจ้าหน้าที่พยาบาล'; // ค่าเริ่มต้นสำหรับ user ทั่วไป\n                }\n            }\n            // อัพเดทเฉพาะถ้ามีข้อมูลที่ต้องอัพเดท\n            if (Object.keys(updates).length > 0) {\n                updates.updatedAt = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)();\n                return (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', user.id), updates);\n            }\n            return Promise.resolve(); // ไม่ต้องอัพเดทถ้าไม่มีข้อมูลที่ต้องเปลี่ยน\n        });\n        await Promise.all(updatePromises);\n        return {\n            success: true,\n            message: 'Updated all users successfully'\n        };\n    } catch (error) {\n        console.error('Error updating users:', error.message);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\r\n * ฟังก์ชันตรวจสอบ active session ของผู้ใช้\r\n */ const checkActiveSession = async (userId)=>{\n    try {\n        const sessionsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(sessionsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('active', '==', true));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            return null;\n        }\n        // ถ้ามี session ที่ active อยู่ ให้ return ข้อมูล session นั้น\n        const sessionDoc = querySnapshot.docs[0];\n        return {\n            id: sessionDoc.id,\n            ...sessionDoc.data()\n        };\n    } catch (error) {\n        console.error('Error checking active session:', error.message);\n        return null;\n    }\n};\n/**\r\n * ฟังก์ชันยกเลิก session\r\n */ const invalidateSession = async (sessionId)=>{\n    try {\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionId), {\n            active: false,\n            logoutTime: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)()\n        });\n        return true;\n    } catch (error) {\n        console.error('Error invalidating session:', error.message);\n        return false;\n    }\n};\n/**\r\n * ฟังก์ชันสร้าง session ใหม่\r\n */ const createUserSession = async (userId, username)=>{\n    try {\n        const sessionData = {\n            userId,\n            username,\n            loginTime: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            active: true,\n            device:  true ? navigator.userAgent : 0,\n            ip: 'Unknown' // ในสภาพแวดล้อมจริงควรใช้บริการดึง IP จากภายนอก\n        };\n        const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions'), sessionData);\n        return docRef.id;\n    } catch (error) {\n        console.error('Error creating user session:', error.message);\n        throw error;\n    }\n};\n/**\r\n * ฟังก์ชันตรวจสอบความถูกต้องของ session\r\n */ const validateSession = async (userId, sessionId)=>{\n    if (!userId || !sessionId) return false;\n    try {\n        const sessionDoc = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionId));\n        if (!sessionDoc.exists()) {\n            return false;\n        }\n        const sessionData = sessionDoc.data();\n        return sessionData.userId === userId && sessionData.active === true;\n    } catch (error) {\n        console.error('Error validating session:', error.message);\n        return false;\n    }\n};\n/**\r\n * ฟังก์ชันตรวจสอบข้อมูลย้อนหลัง 7 วัน\r\n * @param {string} wardId - รหัสวอร์ด\r\n * @param {Date} currentDate - วันที่ปัจจุบัน\r\n * @returns {Promise<Object>} - ผลการตรวจสอบข้อมูล\r\n */ const checkLast7DaysData = async (wardId, currentDate)=>{\n    try {\n        // คำนวณวันที่ 7 วันย้อนหลัง\n        const sevenDaysAgo = new Date(currentDate);\n        sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n        // แปลงวันที่เป็น string format ปี-เดือน-วัน\n        const formatDate = (date)=>{\n            const year = date.getFullYear();\n            const month = String(date.getMonth() + 1).padStart(2, '0');\n            const day = String(date.getDate()).padStart(2, '0');\n            return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n        };\n        const currentDateString = formatDate(currentDate);\n        const sevenDaysAgoString = formatDate(sevenDaysAgo);\n        // สร้างรายการวันที่ทั้ง 7 วันที่ผ่านมา\n        const dateList = [];\n        for(let i = 1; i <= 7; i++){\n            const date = new Date(currentDate);\n            date.setDate(date.getDate() - i);\n            dateList.push(formatDate(date));\n        }\n        // ตรวจสอบข้อมูลใน wardData collection\n        const wardDataRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardData');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(wardDataRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', 'in', dateList));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        // เก็บวันที่ที่มีข้อมูล\n        const datesWithData = new Set();\n        querySnapshot.docs.forEach((doc)=>{\n            const data = doc.data();\n            datesWithData.add(data.date);\n        });\n        // ถ้าไม่มีข้อมูลย้อนหลัง 7 วันเลย\n        if (datesWithData.size === 0) {\n            return {\n                hasData: false,\n                message: 'ไม่พบข้อมูลย้อนหลัง 7 วันที่ผ่านมา กรุณาติดต่อผู้ดูแลระบบเพื่อตรวจสอบ',\n                datesChecked: dateList,\n                datesWithData: Array.from(datesWithData)\n            };\n        }\n        // ถ้ามีข้อมูลอย่างน้อย 1 วัน\n        return {\n            hasData: true,\n            message: 'พบข้อมูลย้อนหลังในช่วง 7 วันที่ผ่านมา',\n            datesChecked: dateList,\n            datesWithData: Array.from(datesWithData)\n        };\n    } catch (error) {\n        console.error('Error checking last 7 days data:', error.message);\n        return {\n            hasData: false,\n            error: error.message,\n            message: 'เกิดข้อผิดพลาดในการตรวจสอบข้อมูลย้อนหลัง 7 วัน'\n        };\n    }\n};\n/**\r\n * ฟังก์ชันบันทึกข้อมูลฉบับร่าง (Save Draft)\r\n * @param {Object} draftData - ข้อมูลฉบับร่าง\r\n * @returns {Promise<Object>} - ผลการบันทึกข้อมูล\r\n */ const saveWardDataDraft = async (draftData)=>{\n    try {\n        const { wardId, date, shift, userId } = draftData;\n        // สร้าง docId ที่ไม่ซ้ำกัน โดยรวม wardId, date, shift และ userId\n        const docId = \"\".concat(wardId, \"_\").concat(date, \"_\").concat(shift, \"_\").concat(userId);\n        // เพิ่ม timestamp\n        const dataWithTimestamp = {\n            ...draftData,\n            lastUpdated: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            isDraft: true\n        };\n        // บันทึกลงใน collection wardDataDrafts\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts', docId), dataWithTimestamp, {\n            merge: true\n        });\n        return {\n            success: true,\n            id: docId,\n            message: 'บันทึกข้อมูลฉบับร่างเรียบร้อยแล้ว'\n        };\n    } catch (error) {\n        console.error('Error saving ward data draft:', error.message);\n        return {\n            success: false,\n            error: error.message,\n            message: 'เกิดข้อผิดพลาดในการบันทึกข้อมูลฉบับร่าง'\n        };\n    }\n};\n/**\r\n * ฟังก์ชันดึงข้อมูลฉบับร่างของผู้ใช้\r\n * @param {string} userId - รหัสผู้ใช้\r\n * @param {string} wardId - รหัสวอร์ด (optional)\r\n * @param {string} date - วันที่ (optional)\r\n * @param {string} shift - กะ (optional)\r\n * @returns {Promise<Array>} - รายการข้อมูลฉบับร่าง\r\n */ const getUserDrafts = async function(userId) {\n    let wardId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, date = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, shift = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n    try {\n        const draftsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts');\n        let conditions = [\n            (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId)\n        ];\n        if (wardId) {\n            conditions.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId));\n        }\n        if (date) {\n            conditions.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date));\n        }\n        if (shift) {\n            conditions.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift));\n        }\n        // สร้าง query ตามเงื่อนไขที่กำหนด\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(draftsRef, ...conditions);\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            return [];\n        }\n        return querySnapshot.docs.map((doc)=>({\n                id: doc.id,\n                ...doc.data()\n            }));\n    } catch (error) {\n        console.error('Error getting user drafts:', error.message);\n        return [];\n    }\n};\n/**\r\n * ฟังก์ชันลบข้อมูลฉบับร่าง\r\n * @param {string} draftId - รหัสฉบับร่าง\r\n * @returns {Promise<Object>} - ผลการลบข้อมูล\r\n */ const deleteWardDataDraft = async (draftId)=>{\n    try {\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts', draftId));\n        return {\n            success: true,\n            message: 'ลบข้อมูลฉบับร่างเรียบร้อยแล้ว'\n        };\n    } catch (error) {\n        console.error('Error deleting ward data draft:', error.message);\n        return {\n            success: false,\n            error: error.message,\n            message: 'เกิดข้อผิดพลาดในการลบข้อมูลฉบับร่าง'\n        };\n    }\n};\n/**\r\n * ฟังก์ชันดึงข้อมูลฉบับร่างล่าสุดของผู้ใช้\r\n * @param {string} userId - รหัสผู้ใช้\r\n * @param {string} wardId - รหัสวอร์ด\r\n * @param {string} date - วันที่\r\n * @param {string} shift - กะ\r\n * @returns {Promise<Object|null>} - ข้อมูลฉบับร่างล่าสุด หรือ null ถ้าไม่มี\r\n */ const getLatestDraft = async (userId, wardId, date, shift)=>{\n    try {\n        // ค้นหาฉบับร่างล่าสุดตามเงื่อนไข\n        const draftsRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(draftsRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            return null;\n        }\n        // หากมีหลายฉบับร่าง ให้เลือกฉบับล่าสุดตาม timestamp\n        let latestDraft = null;\n        let latestTimestamp = 0;\n        querySnapshot.docs.forEach((doc)=>{\n            var _data_lastUpdated;\n            const data = doc.data();\n            const timestamp = ((_data_lastUpdated = data.lastUpdated) === null || _data_lastUpdated === void 0 ? void 0 : _data_lastUpdated.seconds) || 0;\n            if (timestamp > latestTimestamp) {\n                latestTimestamp = timestamp;\n                latestDraft = {\n                    id: doc.id,\n                    ...data\n                };\n            }\n        });\n        return latestDraft;\n    } catch (error) {\n        console.error('Error getting latest draft:', error.message);\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/dataAccess.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/lib/firebase.js":
/*!*****************************!*\
  !*** ./app/lib/firebase.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(app-pages-browser)/./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* __next_internal_client_entry_do_not_use__ db,auth,default auto */ \n\n\n// แสดงค่า environment variables ออกมาเพื่อตรวจสอบ (ลบออกหลังจากแก้ปัญหาแล้ว)\nconsole.log('Firebase Config Environment Variables:');\nconsole.log('API Key available:', !!\"AIzaSyB9sZFJSn8cvkos5fysi47VpqJc5AsorA4\");\nconsole.log('Auth Domain available:', !!\"manpower-patient-summary.firebaseapp.com\");\nconsole.log('Project ID available:', !!\"manpower-patient-summary\");\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB9sZFJSn8cvkos5fysi47VpqJc5AsorA4\" || 0,\n    authDomain: \"manpower-patient-summary.firebaseapp.com\" || 0,\n    projectId: \"manpower-patient-summary\" || 0,\n    storageBucket: \"manpower-patient-summary.firebasestorage.app\" || 0,\n    messagingSenderId: \"644057496880\" || 0,\n    appId: \"1:644057496880:web:6270efc29187b9c025dcf5\" || 0\n};\nconsole.log('Using Firebase config:', {\n    ...firebaseConfig,\n    apiKey: 'HIDDEN'\n});\n// ประกาศตัวแปรนอก try-catch เพื่อให้สามารถ export ได้\nlet app = null;\nlet db = null;\nlet auth = null;\ntry {\n    // Check if Firebase app is already initialized\n    app = !(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n    // Initialize Firebase services\n    db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\n    auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n    console.log('Firebase initialized successfully');\n} catch (error) {\n    console.error('Error initializing Firebase:', error);\n// ตัวแปร app, db และ auth จะยังคงเป็น null ถ้าเกิด error\n}\n// Export นอก try-catch block\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWIvZmlyZWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FFQUVzRDtBQUNKO0FBQ1Y7QUFFeEMsNkVBQTZFO0FBQzdFSSxRQUFRQyxHQUFHLENBQUM7QUFDWkQsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUNDLHlDQUF3QztBQUM1RUYsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLENBQUNDLDBDQUE0QztBQUNwRkYsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUNDLDBCQUEyQztBQUVsRixNQUFNSyxpQkFBaUI7SUFDckJDLFFBQVFOLHlDQUF3QyxJQUFJLENBQXlDO0lBQzdGTyxZQUFZUCwwQ0FBNEMsSUFBSSxDQUEwQztJQUN0R1EsV0FBV1IsMEJBQTJDLElBQUksQ0FBMEI7SUFDcEZTLGVBQWVULDhDQUErQyxJQUFJLENBQThDO0lBQ2hIVyxtQkFBbUJYLGNBQW9ELElBQUksQ0FBYztJQUN6RmEsT0FBT2IsMkNBQXVDLElBQUksQ0FBMkM7QUFDL0Y7QUFFQUYsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQjtJQUFDLEdBQUdNLGNBQWM7SUFBRUMsUUFBUTtBQUFRO0FBRTFFLHNEQUFzRDtBQUN0RCxJQUFJUyxNQUFNO0FBQ1YsSUFBSUMsS0FBSztBQUNULElBQUlDLE9BQU87QUFFWCxJQUFJO0lBQ0YsK0NBQStDO0lBQy9DRixNQUFNLENBQUNwQixxREFBT0EsR0FBR3VCLE1BQU0sR0FBR3hCLDJEQUFhQSxDQUFDVyxrQkFBa0JWLHFEQUFPQSxFQUFFLENBQUMsRUFBRTtJQUV0RSwrQkFBK0I7SUFDL0JxQixLQUFLcEIsZ0VBQVlBLENBQUNtQjtJQUNsQkUsT0FBT3BCLHNEQUFPQSxDQUFDa0I7SUFFZmpCLFFBQVFDLEdBQUcsQ0FBQztBQUNkLEVBQUUsT0FBT29CLE9BQU87SUFDZHJCLFFBQVFxQixLQUFLLENBQUMsZ0NBQWdDQTtBQUM5Qyx5REFBeUQ7QUFDM0Q7QUFFQSw2QkFBNkI7QUFDVDtBQUNwQixpRUFBZUosR0FBR0EsRUFBQyIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxCX1NJUlxcT25lRHJpdmVcXOC5gOC4lOC4quC4geC5jOC4l+C5h+C4reC4m1xcQWN0aXZlIDE0LTMtMjAyNVxcU3VtbWFyeV9vZl9QZXJzb25uZWxfUmF0aW9cXGFwcFxcbGliXFxmaXJlYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5cbmltcG9ydCB7IGluaXRpYWxpemVBcHAsIGdldEFwcHMgfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuaW1wb3J0IHsgZ2V0RmlyZXN0b3JlIH0gZnJvbSAnZmlyZWJhc2UvZmlyZXN0b3JlJztcbmltcG9ydCB7IGdldEF1dGggfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcblxuLy8g4LmB4Liq4LiU4LiH4LiE4LmI4LiyIGVudmlyb25tZW50IHZhcmlhYmxlcyDguK3guK3guIHguKHguLLguYDguJ7guLfguYjguK3guJXguKPguKfguIjguKrguK3guJogKOC4peC4muC4reC4reC4geC4q+C4peC4seC4h+C4iOC4suC4geC5geC4geC5ieC4m+C4seC4jeC4q+C4suC5geC4peC5ieC4pylcbmNvbnNvbGUubG9nKCdGaXJlYmFzZSBDb25maWcgRW52aXJvbm1lbnQgVmFyaWFibGVzOicpO1xuY29uc29sZS5sb2coJ0FQSSBLZXkgYXZhaWxhYmxlOicsICEhcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVBJX0tFWSk7XG5jb25zb2xlLmxvZygnQXV0aCBEb21haW4gYXZhaWxhYmxlOicsICEhcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4pO1xuY29uc29sZS5sb2coJ1Byb2plY3QgSUQgYXZhaWxhYmxlOicsICEhcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCk7XG5cbmNvbnN0IGZpcmViYXNlQ29uZmlnID0ge1xuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkgfHwgJ0FJemFTeUI5c1pGSlNuOGN2a29zNWZ5c2k0N1ZwcUpjNUFzb3JBNCcsXG4gIGF1dGhEb21haW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOIHx8ICdtYW5wb3dlci1wYXRpZW50LXN1bW1hcnkuZmlyZWJhc2VhcHAuY29tJyxcbiAgcHJvamVjdElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIHx8ICdtYW5wb3dlci1wYXRpZW50LXN1bW1hcnknLFxuICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCB8fCAnbWFucG93ZXItcGF0aWVudC1zdW1tYXJ5LmZpcmViYXNlc3RvcmFnZS5hcHAnLFxuICBtZXNzYWdpbmdTZW5kZXJJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfTUVTU0FHSU5HX1NFTkRFUl9JRCB8fCAnNjQ0MDU3NDk2ODgwJyxcbiAgYXBwSWQ6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCB8fCAnMTo2NDQwNTc0OTY4ODA6d2ViOjYyNzBlZmMyOTE4N2I5YzAyNWRjZjUnXG59O1xuXG5jb25zb2xlLmxvZygnVXNpbmcgRmlyZWJhc2UgY29uZmlnOicsIHsuLi5maXJlYmFzZUNvbmZpZywgYXBpS2V5OiAnSElEREVOJ30pO1xuXG4vLyDguJvguKPguLDguIHguLLguKjguJXguLHguKfguYHguJvguKPguJnguK3guIEgdHJ5LWNhdGNoIOC5gOC4nuC4t+C5iOC4reC5g+C4q+C5ieC4quC4suC4oeC4suC4o+C4liBleHBvcnQg4LmE4LiU4LmJXG5sZXQgYXBwID0gbnVsbDtcbmxldCBkYiA9IG51bGw7XG5sZXQgYXV0aCA9IG51bGw7XG5cbnRyeSB7XG4gIC8vIENoZWNrIGlmIEZpcmViYXNlIGFwcCBpcyBhbHJlYWR5IGluaXRpYWxpemVkXG4gIGFwcCA9ICFnZXRBcHBzKCkubGVuZ3RoID8gaW5pdGlhbGl6ZUFwcChmaXJlYmFzZUNvbmZpZykgOiBnZXRBcHBzKClbMF07XG5cbiAgLy8gSW5pdGlhbGl6ZSBGaXJlYmFzZSBzZXJ2aWNlc1xuICBkYiA9IGdldEZpcmVzdG9yZShhcHApO1xuICBhdXRoID0gZ2V0QXV0aChhcHApO1xuXG4gIGNvbnNvbGUubG9nKCdGaXJlYmFzZSBpbml0aWFsaXplZCBzdWNjZXNzZnVsbHknKTtcbn0gY2F0Y2ggKGVycm9yKSB7XG4gIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBGaXJlYmFzZTonLCBlcnJvcik7XG4gIC8vIOC4leC4seC4p+C5geC4m+C4oyBhcHAsIGRiIOC5geC4peC4sCBhdXRoIOC4iOC4sOC4ouC4seC4h+C4hOC4h+C5gOC4m+C5h+C4mSBudWxsIOC4luC5ieC4suC5gOC4geC4tOC4lCBlcnJvclxufVxuXG4vLyBFeHBvcnQg4LiZ4Lit4LiBIHRyeS1jYXRjaCBibG9ja1xuZXhwb3J0IHsgZGIsIGF1dGggfTtcbmV4cG9ydCBkZWZhdWx0IGFwcDtcbiJdLCJuYW1lcyI6WyJpbml0aWFsaXplQXBwIiwiZ2V0QXBwcyIsImdldEZpcmVzdG9yZSIsImdldEF1dGgiLCJjb25zb2xlIiwibG9nIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BVVRIX0RPTUFJTiIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1BST0pFQ1RfSUQiLCJmaXJlYmFzZUNvbmZpZyIsImFwaUtleSIsImF1dGhEb21haW4iLCJwcm9qZWN0SWQiLCJzdG9yYWdlQnVja2V0IiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfU1RPUkFHRV9CVUNLRVQiLCJtZXNzYWdpbmdTZW5kZXJJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX01FU1NBR0lOR19TRU5ERVJfSUQiLCJhcHBJZCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQUF9JRCIsImFwcCIsImRiIiwiYXV0aCIsImxlbmd0aCIsImVycm9yIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/firebase.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/clientLogging.js":
/*!************************************!*\
  !*** ./app/utils/clientLogging.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearLogs: () => (/* binding */ clearLogs),\n/* harmony export */   getLogs: () => (/* binding */ getLogs),\n/* harmony export */   logEvent: () => (/* binding */ logEvent)\n/* harmony export */ });\n// Local storage key for logs\nconst LOGS_STORAGE_KEY = 'app_logs';\nconst MAX_LOGS = 1000;\n// ส่ง log ไปยัง server\nconst sendLogToServer = async (log)=>{\n    try {\n        const response = await fetch('/api/logs', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n        if (!response.ok) {\n            throw new Error(\"Server responded with status \".concat(response.status));\n        }\n        return true;\n    } catch (error) {\n        console.warn('Failed to send log to server:', error);\n        return false;\n    }\n};\nconst logEvent = async function(name) {\n    let properties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const log = {\n            timestamp: new Date().toISOString(),\n            event: name,\n            properties\n        };\n        // Get existing logs\n        const existingLogs = JSON.parse(localStorage.getItem(LOGS_STORAGE_KEY) || '[]');\n        // Add new log\n        existingLogs.push(log);\n        // Keep only the latest MAX_LOGS entries\n        const trimmedLogs = existingLogs.slice(-MAX_LOGS);\n        // Save back to localStorage\n        localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(trimmedLogs));\n        // Development logging\n        if (true) {\n            console.log(\"[Event: \".concat(name, \"]\"), properties);\n        }\n        // ส่ง log ไปยัง server (ไม่รอการตอบกลับ)\n        sendLogToServer(log).catch((error)=>{\n            console.warn('Error sending log to server:', error);\n        });\n        // If you have external logging service (optional)\n        if (false) {}\n    } catch (error) {\n        console.warn('Logging failed:', error);\n    }\n};\nconst getLogs = ()=>{\n    try {\n        return JSON.parse(localStorage.getItem(LOGS_STORAGE_KEY) || '[]');\n    } catch (error) {\n        console.warn('Failed to retrieve logs:', error);\n        return [];\n    }\n};\nconst clearLogs = ()=>{\n    try {\n        localStorage.setItem(LOGS_STORAGE_KEY, '[]');\n    } catch (error) {\n        console.warn('Failed to clear logs:', error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9jbGllbnRMb2dnaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDZCQUE2QjtBQUM3QixNQUFNQSxtQkFBbUI7QUFDekIsTUFBTUMsV0FBVztBQUVqQix1QkFBdUI7QUFDdkIsTUFBTUMsa0JBQWtCLE9BQU9DO0lBQzdCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sYUFBYTtZQUN4Q0MsUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDUDtRQUN2QjtRQUVBLElBQUksQ0FBQ0MsU0FBU08sRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSxnQ0FBZ0QsT0FBaEJSLFNBQVNTLE1BQU07UUFDakU7UUFFQSxPQUFPO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFDLElBQUksQ0FBQyxpQ0FBaUNGO1FBQzlDLE9BQU87SUFDVDtBQUNGO0FBRU8sTUFBTUcsV0FBVyxlQUFPQztRQUFNQyw4RUFBYSxDQUFDO0lBQ2pELElBQUk7UUFDRixNQUFNaEIsTUFBTTtZQUNWaUIsV0FBVyxJQUFJQyxPQUFPQyxXQUFXO1lBQ2pDQyxPQUFPTDtZQUNQQztRQUNGO1FBRUEsb0JBQW9CO1FBQ3BCLE1BQU1LLGVBQWVmLEtBQUtnQixLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQzNCLHFCQUFxQjtRQUUxRSxjQUFjO1FBQ2R3QixhQUFhSSxJQUFJLENBQUN6QjtRQUVsQix3Q0FBd0M7UUFDeEMsTUFBTTBCLGNBQWNMLGFBQWFNLEtBQUssQ0FBQyxDQUFDN0I7UUFFeEMsNEJBQTRCO1FBQzVCeUIsYUFBYUssT0FBTyxDQUFDL0Isa0JBQWtCUyxLQUFLQyxTQUFTLENBQUNtQjtRQUV0RCxzQkFBc0I7UUFDdEIsSUFBSUcsSUFBc0MsRUFBRTtZQUMxQ2pCLFFBQVFaLEdBQUcsQ0FBQyxXQUFnQixPQUFMZSxNQUFLLE1BQUlDO1FBQ2xDO1FBRUEseUNBQXlDO1FBQ3pDakIsZ0JBQWdCQyxLQUFLOEIsS0FBSyxDQUFDbkIsQ0FBQUE7WUFDekJDLFFBQVFDLElBQUksQ0FBQyxnQ0FBZ0NGO1FBQy9DO1FBRUEsa0RBQWtEO1FBQ2xELElBQUlrQixLQUFxRixFQUFFLEVBTTFGO0lBQ0gsRUFBRSxPQUFPbEIsT0FBTztRQUNkQyxRQUFRQyxJQUFJLENBQUMsbUJBQW1CRjtJQUNsQztBQUNGLEVBQUU7QUFFSyxNQUFNc0IsVUFBVTtJQUNyQixJQUFJO1FBQ0YsT0FBTzNCLEtBQUtnQixLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQzNCLHFCQUFxQjtJQUM5RCxFQUFFLE9BQU9jLE9BQU87UUFDZEMsUUFBUUMsSUFBSSxDQUFDLDRCQUE0QkY7UUFDekMsT0FBTyxFQUFFO0lBQ1g7QUFDRixFQUFFO0FBRUssTUFBTXVCLFlBQVk7SUFDdkIsSUFBSTtRQUNGWCxhQUFhSyxPQUFPLENBQUMvQixrQkFBa0I7SUFDekMsRUFBRSxPQUFPYyxPQUFPO1FBQ2RDLFFBQVFDLElBQUksQ0FBQyx5QkFBeUJGO0lBQ3hDO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiQzpcXFVzZXJzXFxCX1NJUlxcT25lRHJpdmVcXOC5gOC4lOC4quC4geC5jOC4l+C5h+C4reC4m1xcQWN0aXZlIDE0LTMtMjAyNVxcU3VtbWFyeV9vZl9QZXJzb25uZWxfUmF0aW9cXGFwcFxcdXRpbHNcXGNsaWVudExvZ2dpbmcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gTG9jYWwgc3RvcmFnZSBrZXkgZm9yIGxvZ3NcbmNvbnN0IExPR1NfU1RPUkFHRV9LRVkgPSAnYXBwX2xvZ3MnO1xuY29uc3QgTUFYX0xPR1MgPSAxMDAwO1xuXG4vLyDguKrguYjguIcgbG9nIOC5hOC4m+C4ouC4seC4hyBzZXJ2ZXJcbmNvbnN0IHNlbmRMb2dUb1NlcnZlciA9IGFzeW5jIChsb2cpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2xvZ3MnLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobG9nKSxcbiAgICB9KTtcbiAgICBcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYFNlcnZlciByZXNwb25kZWQgd2l0aCBzdGF0dXMgJHtyZXNwb25zZS5zdGF0dXN9YCk7XG4gICAgfVxuICAgIFxuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIHNlbmQgbG9nIHRvIHNlcnZlcjonLCBlcnJvcik7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgbG9nRXZlbnQgPSBhc3luYyAobmFtZSwgcHJvcGVydGllcyA9IHt9KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgbG9nID0ge1xuICAgICAgdGltZXN0YW1wOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCksXG4gICAgICBldmVudDogbmFtZSxcbiAgICAgIHByb3BlcnRpZXMsXG4gICAgfTtcblxuICAgIC8vIEdldCBleGlzdGluZyBsb2dzXG4gICAgY29uc3QgZXhpc3RpbmdMb2dzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShMT0dTX1NUT1JBR0VfS0VZKSB8fCAnW10nKTtcbiAgICBcbiAgICAvLyBBZGQgbmV3IGxvZ1xuICAgIGV4aXN0aW5nTG9ncy5wdXNoKGxvZyk7XG4gICAgXG4gICAgLy8gS2VlcCBvbmx5IHRoZSBsYXRlc3QgTUFYX0xPR1MgZW50cmllc1xuICAgIGNvbnN0IHRyaW1tZWRMb2dzID0gZXhpc3RpbmdMb2dzLnNsaWNlKC1NQVhfTE9HUyk7XG4gICAgXG4gICAgLy8gU2F2ZSBiYWNrIHRvIGxvY2FsU3RvcmFnZVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPR1NfU1RPUkFHRV9LRVksIEpTT04uc3RyaW5naWZ5KHRyaW1tZWRMb2dzKSk7XG5cbiAgICAvLyBEZXZlbG9wbWVudCBsb2dnaW5nXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XG4gICAgICBjb25zb2xlLmxvZyhgW0V2ZW50OiAke25hbWV9XWAsIHByb3BlcnRpZXMpO1xuICAgIH1cblxuICAgIC8vIOC4quC5iOC4hyBsb2cg4LmE4Lib4Lii4Lix4LiHIHNlcnZlciAo4LmE4Lih4LmI4Lij4Lit4LiB4Liy4Lij4LiV4Lit4Lia4LiB4Lil4Lix4LiaKVxuICAgIHNlbmRMb2dUb1NlcnZlcihsb2cpLmNhdGNoKGVycm9yID0+IHtcbiAgICAgIGNvbnNvbGUud2FybignRXJyb3Igc2VuZGluZyBsb2cgdG8gc2VydmVyOicsIGVycm9yKTtcbiAgICB9KTtcblxuICAgIC8vIElmIHlvdSBoYXZlIGV4dGVybmFsIGxvZ2dpbmcgc2VydmljZSAob3B0aW9uYWwpXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRVhURVJOQUxfTE9HR0lOR19VUkwpIHtcbiAgICAgIGZldGNoKHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0VYVEVSTkFMX0xPR0dJTkdfVVJMLCB7XG4gICAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobG9nKVxuICAgICAgfSkuY2F0Y2goY29uc29sZS5lcnJvcik7XG4gICAgfVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybignTG9nZ2luZyBmYWlsZWQ6JywgZXJyb3IpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0TG9ncyA9ICgpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShMT0dTX1NUT1JBR0VfS0VZKSB8fCAnW10nKTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byByZXRyaWV2ZSBsb2dzOicsIGVycm9yKTtcbiAgICByZXR1cm4gW107XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCBjbGVhckxvZ3MgPSAoKSA9PiB7XG4gIHRyeSB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oTE9HU19TVE9SQUdFX0tFWSwgJ1tdJyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS53YXJuKCdGYWlsZWQgdG8gY2xlYXIgbG9nczonLCBlcnJvcik7XG4gIH1cbn07XG4iXSwibmFtZXMiOlsiTE9HU19TVE9SQUdFX0tFWSIsIk1BWF9MT0dTIiwic2VuZExvZ1RvU2VydmVyIiwibG9nIiwicmVzcG9uc2UiLCJmZXRjaCIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJlcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwibG9nRXZlbnQiLCJuYW1lIiwicHJvcGVydGllcyIsInRpbWVzdGFtcCIsIkRhdGUiLCJ0b0lTT1N0cmluZyIsImV2ZW50IiwiZXhpc3RpbmdMb2dzIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicHVzaCIsInRyaW1tZWRMb2dzIiwic2xpY2UiLCJzZXRJdGVtIiwicHJvY2VzcyIsImNhdGNoIiwiZW52IiwiTkVYVF9QVUJMSUNfRVhURVJOQUxfTE9HR0lOR19VUkwiLCJnZXRMb2dzIiwiY2xlYXJMb2dzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/clientLogging.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/sessionRecording.js":
/*!***************************************!*\
  !*** ./app/utils/sessionRecording.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identifyUser: () => (/* binding */ identifyUser),\n/* harmony export */   initSessionRecording: () => (/* binding */ initSessionRecording),\n/* harmony export */   logEvent: () => (/* binding */ logEvent)\n/* harmony export */ });\n/* harmony import */ var _clientLogging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clientLogging */ \"(app-pages-browser)/./app/utils/clientLogging.js\");\n\nconst logEvent = function(name) {\n    let properties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    (0,_clientLogging__WEBPACK_IMPORTED_MODULE_0__.logEvent)(name, properties);\n};\nconst initSessionRecording = ()=>{\n// No initialization needed\n};\nconst identifyUser = function(userId) {\n    let userInfo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    (0,_clientLogging__WEBPACK_IMPORTED_MODULE_0__.logEvent)('user_identified', {\n        userId,\n        ...userInfo\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9zZXNzaW9uUmVjb3JkaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkQ7QUFFdEQsTUFBTUEsV0FBVyxTQUFDRTtRQUFNQyw4RUFBYSxDQUFDO0lBQzNDRix3REFBY0EsQ0FBQ0MsTUFBTUM7QUFDdkIsRUFBRTtBQUVLLE1BQU1DLHVCQUF1QjtBQUNsQywyQkFBMkI7QUFDN0IsRUFBRTtBQUVLLE1BQU1DLGVBQWUsU0FBQ0M7UUFBUUMsNEVBQVcsQ0FBQztJQUMvQ04sd0RBQWNBLENBQUMsbUJBQW1CO1FBQUVLO1FBQVEsR0FBR0MsUUFBUTtJQUFDO0FBQzFELEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcQl9TSVJcXE9uZURyaXZlXFzguYDguJTguKrguIHguYzguJfguYfguK3guJtcXEFjdGl2ZSAxNC0zLTIwMjVcXFN1bW1hcnlfb2ZfUGVyc29ubmVsX1JhdGlvXFxhcHBcXHV0aWxzXFxzZXNzaW9uUmVjb3JkaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ0V2ZW50IGFzIGNsaWVudExvZ0V2ZW50IH0gZnJvbSAnLi9jbGllbnRMb2dnaW5nJztcclxuXHJcbmV4cG9ydCBjb25zdCBsb2dFdmVudCA9IChuYW1lLCBwcm9wZXJ0aWVzID0ge30pID0+IHtcclxuICBjbGllbnRMb2dFdmVudChuYW1lLCBwcm9wZXJ0aWVzKTtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBpbml0U2Vzc2lvblJlY29yZGluZyA9ICgpID0+IHtcclxuICAvLyBObyBpbml0aWFsaXphdGlvbiBuZWVkZWRcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBpZGVudGlmeVVzZXIgPSAodXNlcklkLCB1c2VySW5mbyA9IHt9KSA9PiB7XHJcbiAgY2xpZW50TG9nRXZlbnQoJ3VzZXJfaWRlbnRpZmllZCcsIHsgdXNlcklkLCAuLi51c2VySW5mbyB9KTtcclxufTtcclxuIl0sIm5hbWVzIjpbImxvZ0V2ZW50IiwiY2xpZW50TG9nRXZlbnQiLCJuYW1lIiwicHJvcGVydGllcyIsImluaXRTZXNzaW9uUmVjb3JkaW5nIiwiaWRlbnRpZnlVc2VyIiwidXNlcklkIiwidXNlckluZm8iXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/sessionRecording.js\n"));

/***/ })

}]);