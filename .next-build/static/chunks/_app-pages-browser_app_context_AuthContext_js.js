"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_app_context_AuthContext_js"],{

/***/ "(app-pages-browser)/./app/context/AuthContext.js":
/*!************************************!*\
  !*** ./app/context/AuthContext.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthProvider: () => (/* binding */ AuthProvider),\n/* harmony export */   useAuth: () => (/* binding */ useAuth)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_firebase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/firebase */ \"(app-pages-browser)/./app/lib/firebase.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lib/dataAccess */ \"(app-pages-browser)/./app/lib/dataAccess.js\");\n/* harmony import */ var _utils_sessionRecording__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/sessionRecording */ \"(app-pages-browser)/./app/utils/sessionRecording.js\");\n/* __next_internal_client_entry_do_not_use__ useAuth,AuthProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n// ระยะเวลาที่ session token หมดอายุ (20 นาที)\nconst SESSION_EXPIRY_TIME = 20 * 60 * 1000; // 20 นาที ในมิลลิวินาที\n// สร้าง session token แบบสุ่ม\nconst generateSessionToken = ()=>{\n    return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15) + Date.now().toString(36);\n};\n// Initialize with default values including the function signatures\nconst AuthContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)({\n    user: null,\n    loading: true,\n    isAuthenticated: false,\n    authError: null,\n    login: async (username, password)=>{},\n    logout: ()=>{},\n    clearAuthError: ()=>{}\n});\nconst useAuth = ()=>{\n    _s();\n    return (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nfunction AuthProvider(param) {\n    let { children } = param;\n    _s1();\n    const [user, setUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [authError, setAuthError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // Add function to clear auth errors\n    const clearAuthError = ()=>{\n        setAuthError(null);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Add timeout to prevent indefinite loading\n            const loadingTimeout = setTimeout({\n                \"AuthProvider.useEffect.loadingTimeout\": ()=>{\n                    if (loading) {\n                        console.log('Auth loading timeout reached');\n                        setLoading(false);\n                        setAuthError('การตรวจสอบสถานะผู้ใช้ใช้เวลานานเกินไป กรุณาลองใหม่อีกครั้ง');\n                    }\n                }\n            }[\"AuthProvider.useEffect.loadingTimeout\"], 10000); // 10 seconds timeout\n            return ({\n                \"AuthProvider.useEffect\": ()=>clearTimeout(loadingTimeout)\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        loading\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // Check if user is stored in sessionStorage\n            const checkSessionStorage = {\n                \"AuthProvider.useEffect.checkSessionStorage\": ()=>{\n                    console.log('Checking sessionStorage for user data');\n                    try {\n                        // ตรวจสอบว่า sessionStorage พร้อมใช้งานหรือไม่\n                        if ( false || !window.sessionStorage) {\n                            console.log('sessionStorage is not available');\n                            setLoading(false);\n                            return;\n                        }\n                        const storedUser = sessionStorage.getItem('user');\n                        console.log('User data in sessionStorage:', storedUser ? 'Found' : 'Not found');\n                        if (storedUser) {\n                            try {\n                                const userData = JSON.parse(storedUser);\n                                console.log('Successfully parsed user data');\n                                // ตรวจสอบข้อมูลพื้นฐาน\n                                if (userData && userData.uid && userData.username) {\n                                    console.log('Setting user state with data from sessionStorage');\n                                    setUser(userData);\n                                    // ไม่ต้องตรวจสอบ session อีกต่อไป\n                                    setLoading(false);\n                                } else {\n                                    console.log('Invalid user data, missing required fields');\n                                    sessionStorage.removeItem('user');\n                                    setLoading(false);\n                                }\n                            } catch (parseError) {\n                                console.error('Error parsing user data from sessionStorage:', parseError);\n                                // ล้างข้อมูลที่อาจเสียหาย\n                                sessionStorage.removeItem('user');\n                                setAuthError('ข้อมูลการเข้าสู่ระบบไม่ถูกต้อง กรุณาเข้าสู่ระบบใหม่');\n                                setLoading(false);\n                            }\n                        } else {\n                            // ไม่พบข้อมูลผู้ใช้ใน sessionStorage\n                            console.log('No user data found in sessionStorage');\n                            setLoading(false);\n                        }\n                    } catch (error) {\n                        console.error('Error checking sessionStorage:', error);\n                        setAuthError(error.message || 'เกิดข้อผิดพลาดในการตรวจสอบข้อมูลผู้ใช้');\n                        setLoading(false);\n                    }\n                }\n            }[\"AuthProvider.useEffect.checkSessionStorage\"];\n            // หน่วงเวลาเล็กน้อยเพื่อให้แน่ใจว่า client side hydration เสร็จสมบูรณ์\n            const timer = setTimeout({\n                \"AuthProvider.useEffect.timer\": ()=>{\n                    checkSessionStorage();\n                }\n            }[\"AuthProvider.useEffect.timer\"], 100);\n            return ({\n                \"AuthProvider.useEffect\": ()=>clearTimeout(timer)\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], []);\n    // ติดตามการเปลี่ยนแปลงของ session\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"AuthProvider.useEffect\": ()=>{\n            // ยกเลิกการติดตาม session เนื่องจากอาจทำให้เกิดปัญหา\n            console.log('Session tracking disabled for troubleshooting');\n            // แทนที่จะใช้ listener ให้ใช้ setInterval ตรวจสอบข้อมูลผู้ใช้เป็นระยะ\n            const checkInterval = setInterval({\n                \"AuthProvider.useEffect.checkInterval\": ()=>{\n                    if (user) {\n                        // ตรวจสอบว่า user ยังมีอยู่ใน sessionStorage หรือไม่\n                        const storedUser = sessionStorage.getItem('user');\n                        if (!storedUser) {\n                            console.log('User data removed from sessionStorage, logging out');\n                            setUser(null);\n                        }\n                    }\n                }\n            }[\"AuthProvider.useEffect.checkInterval\"], 30000); // ตรวจสอบทุก 30 วินาที\n            return ({\n                \"AuthProvider.useEffect\": ()=>{\n                    clearInterval(checkInterval);\n                }\n            })[\"AuthProvider.useEffect\"];\n        }\n    }[\"AuthProvider.useEffect\"], [\n        user\n    ]);\n    // ฟังก์ชันตรวจสอบความถูกต้องของ session (แบบง่าย)\n    const validateUserSession = async (user)=>{\n        try {\n            console.log('Basic user validation');\n            // ตรวจสอบเฉพาะข้อมูลพื้นฐาน\n            if (!user || !user.uid || !user.username) {\n                console.error('Invalid user data - missing required fields');\n                logout();\n                return false;\n            }\n            return true;\n        } catch (error) {\n            console.error('Error in validateUserSession:', error);\n            setLoading(false);\n            return false;\n        }\n    };\n    // Login function - simplified version\n    const login = async (username, password)=>{\n        setLoading(true);\n        setAuthError(null);\n        try {\n            console.log('[DEBUG-AUTH] Attempting login with username:', username);\n            console.log('[DEBUG-AUTH] Password length:', (password === null || password === void 0 ? void 0 : password.length) || 0);\n            // ตรวจสอบค่า input\n            if (!(username === null || username === void 0 ? void 0 : username.trim()) || !(password === null || password === void 0 ? void 0 : password.trim())) {\n                console.error('[DEBUG-AUTH] Empty username or password');\n                setAuthError('กรุณากรอกชื่อผู้ใช้และรหัสผ่าน');\n                setLoading(false);\n                return {\n                    success: false,\n                    error: 'กรุณากรอกชื่อผู้ใช้และรหัสผ่าน'\n                };\n            }\n            // เรียกใช้ฟังก์ชัน loginUser ที่ปรับปรุงใหม่\n            const result = await (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.loginUser)(username, password);\n            // ตรวจสอบผลลัพธ์\n            if (!result || !result.success) {\n                const errorMsg = (result === null || result === void 0 ? void 0 : result.error) || 'ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง';\n                console.debug('[DEBUG-AUTH] Login failed:', errorMsg);\n                setAuthError(errorMsg);\n                setLoading(false);\n                return result || {\n                    success: false,\n                    error: errorMsg\n                };\n            }\n            console.log('[DEBUG-AUTH] Login successful, user data:', {\n                uid: result.user.uid,\n                username: result.user.username,\n                role: result.user.role,\n                department: result.user.department\n            });\n            // ตรวจสอบว่ามีข้อมูลผู้ใช้หรือไม่\n            if (!result.user || !result.user.uid) {\n                console.debug('[DEBUG-AUTH] User data is incomplete');\n                setAuthError('ข้อมูลผู้ใช้ไม่สมบูรณ์ โปรดติดต่อผู้ดูแลระบบ');\n                setLoading(false);\n                return {\n                    success: false,\n                    error: 'ข้อมูลผู้ใช้ไม่สมบูรณ์'\n                };\n            }\n            // บันทึกข้อมูลใน sessionStorage\n            try {\n                const userData = JSON.stringify(result.user);\n                sessionStorage.setItem('user', userData);\n                console.log('[DEBUG-AUTH] User data saved to sessionStorage, length:', userData.length);\n                console.log('[DEBUG-AUTH] User department in storage:', result.user.department);\n            } catch (storageError) {\n                console.error('[DEBUG-AUTH] Error saving to sessionStorage:', storageError);\n            }\n            // อัปเดตสถานะผู้ใช้ใน state\n            setUser(result.user);\n            // บันทึกการเข้าสู่ระบบ\n            try {\n                (0,_utils_sessionRecording__WEBPACK_IMPORTED_MODULE_5__.logEvent)('user_login', {\n                    userId: result.user.uid,\n                    username: result.user.username,\n                    role: result.user.role,\n                    timestamp: new Date().toISOString()\n                });\n            } catch (logError) {\n                console.warn('[DEBUG-AUTH] Error logging login event:', logError);\n            }\n            console.log('[DEBUG-AUTH] Login process complete, returning result');\n            setLoading(false);\n            return result;\n        } catch (error) {\n            console.error('[DEBUG-AUTH] Login error in AuthContext:', error);\n            const errorMsg = error.message || 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ กรุณาลองใหม่อีกครั้ง';\n            setAuthError(errorMsg);\n            setLoading(false);\n            return {\n                success: false,\n                error: errorMsg\n            };\n        }\n    };\n    // Logout function (simplified)\n    const logout = async ()=>{\n        try {\n            console.log('Logging out user');\n            // ตรวจสอบว่ามี user ที่ล็อกอินอยู่หรือไม่\n            if (user && user.uid && user.sessionToken) {\n                try {\n                    console.log('Calling logoutUser function');\n                    // เรียกใช้ฟังก์ชัน logoutUser แทน invalidateSession\n                    const result = await (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.logoutUser)(user.uid, user.sessionToken, user.sessionId);\n                    if (result.success) {\n                        console.log('Logout successful in database');\n                    } else {\n                        console.warn('Issue during logout:', result.messages || result.error);\n                    }\n                } catch (dbError) {\n                    console.error('Error during database logout:', dbError);\n                }\n            } else {\n                // กรณีไม่มี user data ใน state แต่อาจมีใน sessionStorage\n                const userData = sessionStorage.getItem('user');\n                if (userData) {\n                    try {\n                        const parsedUser = JSON.parse(userData);\n                        if (parsedUser && parsedUser.uid && parsedUser.sessionToken) {\n                            console.log('Logging out user from sessionStorage data');\n                            await (0,_lib_dataAccess__WEBPACK_IMPORTED_MODULE_4__.logoutUser)(parsedUser.uid, parsedUser.sessionToken, parsedUser.sessionId);\n                        }\n                    } catch (parseError) {\n                        console.error('Error parsing user data for logout:', parseError);\n                    }\n                }\n            }\n            // ล้างข้อมูลใน sessionStorage\n            sessionStorage.removeItem('user');\n            // รีเซ็ต state\n            setUser(null);\n            setAuthError(null);\n            console.log('Logged out successfully (client-side)');\n            // นำทางไปยังหน้า login หลังจากการออกจากระบบ\n            try {\n                window.location.href = '/page/login';\n            } catch (navError) {\n                console.error('Error navigating after logout:', navError);\n            }\n        } catch (error) {\n            console.error('Logout error:', error);\n        }\n    };\n    const contextValue = {\n        user,\n        loading,\n        isAuthenticated: !!user,\n        authError,\n        login,\n        logout,\n        clearAuthError\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(AuthContext.Provider, {\n        value: contextValue,\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Active 14-3-2025\\\\Summary_of_Personnel_Ratio\\\\app\\\\context\\\\AuthContext.js\",\n        lineNumber: 314,\n        columnNumber: 5\n    }, this);\n}\n_s1(AuthProvider, \"76MNfp0tazfQpgpif3PspRKGE6w=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/context/AuthContext.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/lib/dataAccess.js":
/*!*******************************!*\
  !*** ./app/lib/dataAccess.js ***!
  \*******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addUser: () => (/* binding */ addUser),\n/* harmony export */   checkLast7DaysData: () => (/* binding */ checkLast7DaysData),\n/* harmony export */   deleteUser: () => (/* binding */ deleteUser),\n/* harmony export */   deleteWardDataDraft: () => (/* binding */ deleteWardDataDraft),\n/* harmony export */   getAllUsers: () => (/* binding */ getAllUsers),\n/* harmony export */   getLatestDraft: () => (/* binding */ getLatestDraft),\n/* harmony export */   getUserDataFromCollection: () => (/* binding */ getUserDataFromCollection),\n/* harmony export */   getUserDrafts: () => (/* binding */ getUserDrafts),\n/* harmony export */   getWardDataByDate: () => (/* binding */ getWardDataByDate),\n/* harmony export */   getWardDataHistory: () => (/* binding */ getWardDataHistory),\n/* harmony export */   invalidateSession: () => (/* binding */ invalidateSession),\n/* harmony export */   logUserActivity: () => (/* binding */ logUserActivity),\n/* harmony export */   logWardDataHistory: () => (/* binding */ logWardDataHistory),\n/* harmony export */   loginUser: () => (/* binding */ loginUser),\n/* harmony export */   logoutUser: () => (/* binding */ logoutUser),\n/* harmony export */   saveWardDataDraft: () => (/* binding */ saveWardDataDraft),\n/* harmony export */   saveWardDataFinal: () => (/* binding */ saveWardDataFinal),\n/* harmony export */   validateSession: () => (/* binding */ validateSession)\n/* harmony export */ });\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var _firebase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./firebase */ \"(app-pages-browser)/./app/lib/firebase.js\");\n/* harmony import */ var _barrel_optimize_names_format_parseISO_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=format,parseISO,subDays!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/esm/subDays/index.js\");\n/* harmony import */ var _barrel_optimize_names_format_parseISO_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=format,parseISO,subDays!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/esm/format/index.js\");\n/* __next_internal_client_entry_do_not_use__ saveWardDataDraft,saveWardDataFinal,getUserDrafts,getLatestDraft,deleteWardDataDraft,logWardDataHistory,getWardDataHistory,checkLast7DaysData,logUserActivity,loginUser,validateSession,invalidateSession,getAllUsers,deleteUser,addUser,logoutUser,getWardDataByDate,getUserDataFromCollection auto */ \n\n\n// ฟังก์ชันบันทึกข้อมูลเวร (ฉบับร่าง)\nconst saveWardDataDraft = async (data)=>{\n    try {\n        if (!data.wardId || !data.date || !data.shift || !data.userId) {\n            return {\n                success: false,\n                error: 'Missing required fields: wardId, date, shift, or userId'\n            };\n        }\n        // สร้าง docId ที่ไม่ซ้ำกัน\n        const docId = \"\".concat(data.date, \"_\").concat(data.wardId, \"_\").concat(data.shift, \"_\").concat(data.userId);\n        // เพิ่ม timestamp สำหรับการเรียงลำดับ\n        const draftData = {\n            ...data,\n            timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            lastUpdated: new Date().toISOString()\n        };\n        // บันทึกข้อมูลใน collection wardDataDrafts\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts', docId), draftData);\n        return {\n            success: true,\n            message: 'Draft saved successfully',\n            id: docId\n        };\n    } catch (error) {\n        console.error('Error saving ward data draft:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// ฟังก์ชันบันทึกข้อมูลเวร (ฉบับสมบูรณ์)\nconst saveWardDataFinal = async (data)=>{\n    try {\n        if (!data.wardId || !data.date || !data.shift) {\n            return {\n                success: false,\n                error: 'Missing required fields: wardId, date, or shift'\n            };\n        }\n        // สร้าง docId ที่ไม่ซ้ำกัน\n        const docId = \"\".concat(data.date, \"_\").concat(data.wardId, \"_\").concat(data.shift);\n        // เพิ่มข้อมูลเพิ่มเติม\n        const finalData = {\n            ...data,\n            isApproved: true,\n            isDraft: false,\n            timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            lastUpdated: new Date().toISOString()\n        };\n        // บันทึกข้อมูลใน collection wardDataFinal\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataFinal', docId), finalData);\n        return {\n            success: true,\n            message: 'Data saved as final successfully',\n            id: docId\n        };\n    } catch (error) {\n        console.error('Error saving final ward data:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// ฟังก์ชันดึงข้อมูลฉบับร่างของผู้ใช้\nconst getUserDrafts = async function(userId) {\n    let wardId = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, date = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, shift = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n    try {\n        let q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId));\n        // เพิ่มเงื่อนไขการค้นหาตาม wardId (ถ้ามี)\n        if (wardId) {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(q, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId));\n        }\n        // เพิ่มเงื่อนไขการค้นหาตามวันที่ (ถ้ามี)\n        if (date) {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(q, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date));\n        }\n        // เพิ่มเงื่อนไขการค้นหาตามกะ (ถ้ามี)\n        if (shift) {\n            q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(q, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift));\n        }\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        // ถ้าไม่พบข้อมูล\n        if (querySnapshot.empty) {\n            return null;\n        }\n        // แปลงข้อมูลที่ได้เป็น array\n        const drafts = [];\n        querySnapshot.forEach((doc)=>{\n            drafts.push({\n                id: doc.id,\n                ...doc.data()\n            });\n        });\n        // เรียงลำดับตามเวลาที่บันทึกล่าสุด\n        return drafts.sort((a, b)=>{\n            const dateA = a.timestamp ? new Date(a.timestamp) : new Date(0);\n            const dateB = b.timestamp ? new Date(b.timestamp) : new Date(0);\n            return dateB - dateA;\n        });\n    } catch (error) {\n        console.error('Error getting user drafts:', error);\n        return null;\n    }\n};\n// ฟังก์ชันดึงข้อมูลฉบับร่างล่าสุด\nconst getLatestDraft = async (userId, wardId, date, shift)=>{\n    try {\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('timestamp', 'desc'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(1));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        // ถ้าไม่พบข้อมูล\n        if (querySnapshot.empty) {\n            return null;\n        }\n        // ส่งคืนข้อมูลฉบับร่างล่าสุด\n        return querySnapshot.docs[0].data();\n    } catch (error) {\n        console.error('Error getting latest draft:', error);\n        return null;\n    }\n};\n// ฟังก์ชันลบข้อมูลฉบับร่าง\nconst deleteWardDataDraft = async (draftId)=>{\n    try {\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts', draftId));\n        return {\n            success: true,\n            message: 'Draft deleted successfully'\n        };\n    } catch (error) {\n        console.error('Error deleting draft:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// ฟังก์ชันบันทึกประวัติการแก้ไขข้อมูล\nconst logWardDataHistory = async (data, action, userId)=>{\n    try {\n        if (!data.wardId || !data.date || !data.shift) {\n            return {\n                success: false,\n                error: 'Missing required fields'\n            };\n        }\n        // ข้อมูลประวัติ\n        const historyData = {\n            wardId: data.wardId,\n            date: data.date,\n            shift: data.shift,\n            action: action,\n            userId: userId,\n            userDisplayName: data.userDisplayName || '',\n            timestamp: (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.serverTimestamp)(),\n            data: data // เก็บข้อมูลทั้งหมดในขณะนั้น\n        };\n        // บันทึกประวัติ\n        const docRef = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.addDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataHistory'), historyData);\n        return {\n            success: true,\n            message: 'History logged successfully',\n            id: docRef.id\n        };\n    } catch (error) {\n        console.error('Error logging history:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// ฟังก์ชันดึงประวัติการแก้ไข\nconst getWardDataHistory = async (wardId, date, shift)=>{\n    try {\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataHistory'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('timestamp', 'desc'));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        // ถ้าไม่พบข้อมูล\n        if (querySnapshot.empty) {\n            return [];\n        }\n        // แปลงข้อมูลที่ได้เป็น array\n        const history = [];\n        querySnapshot.forEach((doc)=>{\n            const data = doc.data();\n            // แปลง timestamp เป็น string ถ้ามี\n            const timestamp = data.timestamp instanceof firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.Timestamp ? data.timestamp.toDate().toISOString() : data.timestamp;\n            history.push({\n                id: doc.id,\n                ...data,\n                timestamp: timestamp\n            });\n        });\n        return history;\n    } catch (error) {\n        console.error('Error getting ward data history:', error);\n        return [];\n    }\n};\n/**\n * ฟังก์ชันตรวจสอบข้อมูลย้อนหลัง 7 วัน\n * @param {string} wardId รหัส ward\n * @param {Date} currentDate วันที่ปัจจุบัน (optional)\n * @returns {Promise<boolean>} true ถ้ามีข้อมูลย้อนหลัง 7 วัน, false ถ้าไม่มี\n */ const checkLast7DaysData = async function(wardId) {\n    let currentDate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new Date();\n    try {\n        if (!wardId) {\n            console.error('Ward ID is required');\n            return false;\n        }\n        // คำนวณวันที่ 7 วันย้อนหลัง\n        const sevenDaysAgo = (0,_barrel_optimize_names_format_parseISO_subDays_date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(currentDate, 7);\n        const startDate = (0,_barrel_optimize_names_format_parseISO_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(sevenDaysAgo, 'yyyy-MM-dd');\n        const endDate = (0,_barrel_optimize_names_format_parseISO_subDays_date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(currentDate, 'yyyy-MM-dd');\n        console.log(\"Checking for data between \".concat(startDate, \" and \").concat(endDate, \" for ward \").concat(wardId));\n        // ค้นหาข้อมูลในตาราง wardDataFinal\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataFinal'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '>=', startDate), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '<', endDate));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        // ถ้ามีข้อมูลใน wardDataFinal\n        if (!querySnapshot.empty) {\n            return true;\n        }\n        // ถ้าไม่มีข้อมูลใน wardDataFinal ให้ตรวจสอบใน wardDataDrafts\n        const draftsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '>=', startDate), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '<', endDate));\n        const draftsSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(draftsQuery);\n        return !draftsSnapshot.empty;\n    } catch (error) {\n        console.error('Error checking last 7 days data:', error);\n        return false;\n    }\n};\n/**\n * บันทึกประวัติการเข้าใช้งานระบบ\n * @param {string} userId - ID ของผู้ใช้\n * @param {string} action - ประเภทการกระทำ (login/logout)\n * @param {Object} data - ข้อมูลเพิ่มเติม\n * @returns {Promise<Object>} - ผลลัพธ์การบันทึก\n */ const logUserActivity = async function(userId, action) {\n    let data = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    try {\n        if (!userId || !action) {\n            console.error('[USER-LOG] Missing required parameters');\n            return {\n                success: false,\n                error: 'Missing required parameters'\n            };\n        }\n        console.log(\"[USER-LOG] Recording user activity: \".concat(action, \" for user \").concat(userId));\n        // สร้างข้อมูลประวัติ\n        const now = new Date();\n        const timestamp = now.toISOString();\n        const logId = \"\".concat(userId, \"_\").concat(action, \"_\").concat(now.getTime());\n        const logData = {\n            userId,\n            action,\n            timestamp,\n            data: {\n                ...data,\n                userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown',\n                datetime: timestamp\n            }\n        };\n        // บันทึกลงในคอลเลกชัน userActivityLogs\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userActivityLogs', logId), logData);\n        console.log(\"[USER-LOG] Activity logged successfully: \".concat(logId));\n        return {\n            success: true,\n            logId\n        };\n    } catch (error) {\n        console.error('[USER-LOG] Error logging user activity:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n// ฟังก์ชันเข้าสู่ระบบ (แบบง่าย)\nconst loginUser = async (username, password)=>{\n    try {\n        console.log(\"[DEBUG-LOGIN] Attempting login for user: \".concat(username));\n        // ทำความสะอาด input\n        const cleanUsername = (username === null || username === void 0 ? void 0 : username.trim()) || '';\n        const cleanPassword = (password === null || password === void 0 ? void 0 : password.trim()) || '';\n        if (!cleanUsername || !cleanPassword) {\n            console.log('[DEBUG-LOGIN] Username or password is empty after cleaning');\n            return {\n                success: false,\n                error: 'กรุณากรอกชื่อผู้ใช้และรหัสผ่าน'\n            };\n        }\n        // รหัสผ่าน master สำหรับ Admin (เฉพาะกรณีฉุกเฉิน)\n        const MASTER_PASSWORD = 'admin@12345!'; // ควรเก็บใน environment variable\n        const isUsingMasterPassword = cleanPassword === MASTER_PASSWORD;\n        // ค้นหาผู้ใช้แบบไม่คำนึงถึงตัวพิมพ์ใหญ่/เล็ก\n        console.log(\"[DEBUG-LOGIN] Searching for user: \".concat(cleanUsername, \" (case insensitive)\"));\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        // ค้นหาผู้ใช้ทั้งหมดและกรองด้วย JavaScript\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(usersRef);\n        // กรองผู้ใช้โดยไม่คำนึงถึงตัวพิมพ์ใหญ่/เล็ก\n        let userDoc = null;\n        querySnapshot.forEach((doc)=>{\n            const data = doc.data();\n            if (data.username && data.username.toLowerCase() === cleanUsername.toLowerCase()) {\n                userDoc = {\n                    id: doc.id,\n                    data: data\n                };\n            }\n        });\n        // ไม่พบผู้ใช้\n        if (!userDoc) {\n            console.log('[DEBUG-LOGIN] User not found after case-insensitive search');\n            // ตรวจสอบว่ากำลังพยายามล็อกอินเป็น admin ด้วยรหัส master หรือไม่\n            if (cleanUsername.toLowerCase() === 'admin' && isUsingMasterPassword) {\n                console.log('[DEBUG-LOGIN] Attempting master password login for admin');\n                // ค้นหา admin user คนแรกในระบบ\n                let adminUser = null;\n                querySnapshot.forEach((doc)=>{\n                    const data = doc.data();\n                    if (data.role === 'admin' && !adminUser) {\n                        adminUser = {\n                            id: doc.id,\n                            data: data\n                        };\n                    }\n                });\n                if (adminUser) {\n                    console.log('[DEBUG-LOGIN] Found admin user to use with master password');\n                    userDoc = adminUser;\n                } else {\n                    console.log('[DEBUG-LOGIN] No admin user found for master password');\n                    return {\n                        success: false,\n                        error: 'ไม่พบผู้ดูแลระบบในฐานข้อมูล'\n                    };\n                }\n            } else {\n                return {\n                    success: false,\n                    error: 'ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง'\n                };\n            }\n        }\n        // ข้อมูลผู้ใช้\n        const userData = userDoc.data;\n        console.log(\"[DEBUG-LOGIN] Found user: \".concat(userData.username, \", checking password...\"));\n        // ตรวจสอบว่ามีรหัสผ่านในฐานข้อมูลหรือไม่\n        if (!userData.password && !isUsingMasterPassword) {\n            console.log('[DEBUG-LOGIN] User has no password in database');\n            return {\n                success: false,\n                error: 'พบข้อผิดพลาดเกี่ยวกับบัญชีผู้ใช้ กรุณาติดต่อผู้ดูแลระบบ'\n            };\n        }\n        // ข้ามการตรวจสอบรหัสผ่านถ้าใช้ master password\n        let passwordMatched = isUsingMasterPassword;\n        if (!passwordMatched) {\n            // ทำความสะอาดและทดสอบหลายรูปแบบของรหัสผ่าน\n            const storedPassword = userData.password.trim();\n            // ตรวจสอบแบบปกติ (เหมือนเดิม แต่รองรับ null/undefined)\n            if (storedPassword === cleanPassword) {\n                passwordMatched = true;\n            }\n            // ตรวจสอบรูปแบบอื่นๆ (ไม่สนใจตัวพิมพ์เล็กใหญ่)\n            if (!passwordMatched && storedPassword.toLowerCase() === cleanPassword.toLowerCase()) {\n                console.log('[DEBUG-LOGIN] Password matched with case-insensitive comparison');\n                passwordMatched = true;\n            }\n            // ตรวจสอบโดยไม่มีช่องว่าง (ในกรณีที่ trim() ทำงานไม่ถูกต้อง)\n            if (!passwordMatched && storedPassword.replace(/\\s+/g, '') === cleanPassword.replace(/\\s+/g, '')) {\n                console.log('[DEBUG-LOGIN] Password matched after removing all whitespace');\n                passwordMatched = true;\n            }\n            // เพิ่มการตรวจสอบว่าเป็นส่วนหนึ่งของรหัสผ่านหรือไม่\n            if (!passwordMatched && storedPassword.startsWith(cleanPassword)) {\n                console.log('[DEBUG-LOGIN] Input password is a prefix of stored password - incomplete password');\n            // ไม่ได้ set passwordMatched = true - เพียงแค่บันทึกข้อมูลเพิ่มเติม\n            }\n        }\n        // ตรวจสอบการจับคู่รหัสผ่าน\n        if (!passwordMatched) {\n            // ใช้ console.log แทน console.error เพื่อไม่ให้แสดงเป็น error ในหน้า browser\n            console.log('[DEBUG-LOGIN] Password mismatch detected');\n            if (true) {\n                var _userData_password;\n                // แสดงข้อมูลเพิ่มเติมเฉพาะใน development mode\n                console.log(\"[DEBUG-LOGIN] Stored pass length: \".concat(((_userData_password = userData.password) === null || _userData_password === void 0 ? void 0 : _userData_password.length) || 0, \", Input pass length: \").concat(cleanPassword.length));\n            }\n            return {\n                success: false,\n                error: 'ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง'\n            };\n        }\n        console.log('[DEBUG-LOGIN] Password match successful, creating session');\n        // สร้าง session token แบบง่าย\n        const sessionToken = Math.random().toString(36).substring(2, 15) + Date.now().toString(36);\n        const sessionId = \"session_\".concat(Date.now());\n        const now = new Date();\n        const nowIso = now.toISOString();\n        // คำนวณเวลาหมดอายุ (24 ชั่วโมง)\n        const expiresAt = new Date(now.getTime() + 24 * 60 * 60 * 1000).toISOString();\n        // อัปเดตข้อมูล session ในฐานข้อมูล users\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userDoc.id), {\n                sessionToken,\n                sessionId,\n                lastLogin: nowIso\n            });\n            console.log('[DEBUG-LOGIN] Session data updated in users collection');\n        } catch (updateError) {\n            console.error('[DEBUG-LOGIN] Failed to update session info in users collection:', updateError);\n        // ถึงมีปัญหา ก็ให้ดำเนินการต่อ\n        }\n        // บันทึกข้อมูล session ลงในคอลเลกชัน userSessions\n        try {\n            const sessionData = {\n                userId: userDoc.id,\n                username: userData.username,\n                sessionToken,\n                createdAt: nowIso,\n                lastActivity: nowIso,\n                expiresAt: expiresAt,\n                userAgent: typeof navigator !== 'undefined' ? navigator.userAgent : 'unknown',\n                ipAddress: 'client-side' // ไม่สามารถรับ IP address ได้จากฝั่ง client\n            };\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionId), sessionData);\n            console.log('[DEBUG-LOGIN] Session data saved to userSessions collection');\n        } catch (sessionError) {\n            console.error('[DEBUG-LOGIN] Failed to save session to userSessions collection:', sessionError);\n        // ถึงมีปัญหา ก็ให้ดำเนินการต่อ\n        }\n        // บันทึกประวัติการล็อกอิน\n        await logUserActivity(userDoc.id, 'login', {\n            username: userData.username,\n            sessionId,\n            loginTime: nowIso,\n            usedMasterPassword: isUsingMasterPassword\n        });\n        // สร้าง user object สำหรับส่งกลับ\n        const user = {\n            uid: userDoc.id,\n            username: userData.username,\n            displayName: userData.displayName || userData.username,\n            role: userData.role || 'user',\n            department: userData.department || null,\n            sessionToken,\n            sessionId\n        };\n        console.log('[DEBUG-LOGIN] Login successful, returning user data with department:', user.department);\n        return {\n            success: true,\n            user: user\n        };\n    } catch (error) {\n        console.error('[DEBUG-LOGIN] Login error:', error);\n        return {\n            success: false,\n            error: 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ กรุณาลองใหม่อีกครั้ง'\n        };\n    }\n};\n/**\n * ตรวจสอบความถูกต้องของ session token\n * @param {string} userId - ID ของผู้ใช้\n * @param {string} sessionToken - Session token ที่ต้องการตรวจสอบ\n * @param {string} sessionId - ID ของ session ที่ต้องการตรวจสอบ\n * @returns {Promise<boolean>} - ผลการตรวจสอบ (true = ถูกต้อง, false = ไม่ถูกต้อง)\n */ const validateSession = async (userId, sessionToken, sessionId)=>{\n    try {\n        console.log('Validating session:', {\n            userId,\n            sessionId\n        });\n        if (!userId || !sessionToken || !sessionId) {\n            console.error('Missing required parameters for session validation');\n            return false;\n        }\n        // ตรวจสอบข้อมูลใน collection users\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userId);\n        const userSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(userRef);\n        if (!userSnap.exists()) {\n            console.error('User not found in database');\n            return false;\n        }\n        const userData = userSnap.data();\n        // ตรวจสอบว่า sessionToken ตรงกับที่เก็บไว้หรือไม่\n        if (userData.sessionToken !== sessionToken) {\n            console.error('Session token mismatch');\n            return false;\n        }\n        // ตรวจสอบว่า sessionId ตรงกับที่เก็บไว้หรือไม่\n        if (userData.sessionId !== sessionId) {\n            console.error('Session ID mismatch');\n            return false;\n        }\n        // ตรวจสอบเวลาหมดอายุของ session\n        if (userData.sessionExpiresAt) {\n            const expiresAt = new Date(userData.sessionExpiresAt);\n            const now = new Date();\n            if (now > expiresAt) {\n                console.error('Session expired at:', expiresAt.toISOString());\n                return false;\n            }\n        }\n        // ตรวจสอบข้อมูลใน collection userSessions\n        const sessionRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionId);\n        const sessionSnap = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(sessionRef);\n        if (!sessionSnap.exists()) {\n            console.error('Session not found in database');\n            return false;\n        }\n        const sessionData = sessionSnap.data();\n        // ตรวจสอบว่า session นี้เป็นของผู้ใช้คนนี้จริงหรือไม่\n        if (sessionData.userId !== userId) {\n            console.error('Session belongs to different user');\n            return false;\n        }\n        // ตรวจสอบว่า session token ตรงกับที่เก็บไว้หรือไม่\n        if (sessionData.sessionToken !== sessionToken) {\n            console.error('Session token mismatch in sessions collection');\n            return false;\n        }\n        // ตรวจสอบเวลาหมดอายุของ session\n        if (sessionData.expiresAt) {\n            const expiresAt = new Date(sessionData.expiresAt);\n            const now = new Date();\n            if (now > expiresAt) {\n                console.error('Session expired in sessions collection');\n                return false;\n            }\n        }\n        // อัปเดตเวลาล่าสุดที่มีการใช้งาน session\n        try {\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(userRef, {\n                lastActivity: new Date().toISOString()\n            });\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)(sessionRef, {\n                lastActivity: new Date().toISOString()\n            });\n        } catch (updateError) {\n            console.warn('Failed to update last activity time:', updateError);\n        // ในกรณีนี้ไม่ต้องการให้เกิดข้อผิดพลาด เราจะส่งค่า true กลับไปเหมือนเดิม\n        }\n        return true;\n    } catch (error) {\n        console.error('Error validating session:', error);\n        return false;\n    }\n};\n// ฟังก์ชันยกเลิก session\nconst invalidateSession = async (sessionToken)=>{\n    try {\n        if (!sessionToken) {\n            return {\n                success: false,\n                error: 'No session token provided'\n            };\n        }\n        // ค้นหาผู้ใช้ที่มี session token นี้\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('sessionToken', '==', sessionToken));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (querySnapshot.empty) {\n            return {\n                success: false,\n                error: 'Session not found'\n            };\n        }\n        // ลบ session token\n        const userDoc = querySnapshot.docs[0];\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userDoc.id), {\n            sessionToken: null\n        });\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Session invalidation error:', error);\n        return {\n            success: false,\n            error: 'Error invalidating session'\n        };\n    }\n};\n// ฟังก์ชันดึงข้อมูลผู้ใช้ทั้งหมด\nconst getAllUsers = async ()=>{\n    try {\n        console.log('Getting all users from database...');\n        // ค้นหาข้อมูลใน collection users\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(usersRef);\n        // ถ้าไม่พบข้อมูล\n        if (querySnapshot.empty) {\n            console.log('No users found in database');\n            return [];\n        }\n        // แปลงข้อมูลที่ได้เป็น array\n        const users = [];\n        querySnapshot.forEach((doc)=>{\n            users.push({\n                id: doc.id,\n                ...doc.data()\n            });\n        });\n        console.log(\"Found \".concat(users.length, \" users in database\"));\n        return users;\n    } catch (error) {\n        console.error('Error getting all users:', error);\n        throw new Error('Failed to get users: ' + error.message);\n    }\n};\n/**\n * ลบผู้ใช้ออกจากระบบตาม ID\n * @param {string} userId - ID ของผู้ใช้ที่ต้องการลบ\n * @returns {Promise<Object>} - ผลลัพธ์การลบผู้ใช้\n */ const deleteUser = async (userId)=>{\n    try {\n        if (!userId) {\n            console.error('User ID is required for deletion');\n            return {\n                success: false,\n                error: 'User ID is required'\n            };\n        }\n        console.log(\"Deleting user with ID: \".concat(userId));\n        // ลบข้อมูลจาก collection users\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userId));\n        // ลบ session ที่เกี่ยวข้องกับผู้ใช้ (ถ้ามี)\n        try {\n            const sessionsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId));\n            const sessionsSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(sessionsQuery);\n            if (!sessionsSnapshot.empty) {\n                const deletePromises = [];\n                sessionsSnapshot.forEach((sessionDoc)=>{\n                    deletePromises.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionDoc.id)));\n                });\n                await Promise.all(deletePromises);\n                console.log(\"Deleted \".concat(deletePromises.length, \" sessions for user \").concat(userId));\n            }\n        } catch (sessionError) {\n            console.warn(\"Error deleting sessions for user \".concat(userId, \":\"), sessionError);\n        // ไม่ต้องการให้เกิดข้อผิดพลาดเพียงเพราะลบ session ไม่สำเร็จ\n        }\n        return {\n            success: true,\n            message: 'User deleted successfully'\n        };\n    } catch (error) {\n        console.error('Error deleting user:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * เพิ่มผู้ใช้ใหม่เข้าสู่ระบบ\n * @param {Object} userData - ข้อมูลผู้ใช้ที่ต้องการเพิ่ม\n * @returns {Promise<Object>} - ผลลัพธ์การเพิ่มผู้ใช้\n */ const addUser = async (userData)=>{\n    try {\n        if (!userData.username || !userData.password) {\n            console.error('Username and password are required');\n            return {\n                success: false,\n                error: 'กรุณากรอกชื่อผู้ใช้และรหัสผ่าน'\n            };\n        }\n        console.log(\"Adding new user: \".concat(userData.username));\n        // ตรวจสอบว่ามีชื่อผู้ใช้นี้ในระบบแล้วหรือไม่\n        const usersRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users');\n        const q = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)(usersRef, (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('username', '==', userData.username));\n        const querySnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(q);\n        if (!querySnapshot.empty) {\n            console.error('Username already exists');\n            return {\n                success: false,\n                error: 'ชื่อผู้ใช้นี้มีในระบบแล้ว กรุณาใช้ชื่อผู้ใช้อื่น'\n            };\n        }\n        // สร้าง timestamp ในรูปแบบที่ต้องการ YYYY-MM-DD_HH-MM-SS-AM/PM\n        const now = new Date();\n        // รูปแบบวันที่ YYYY-MM-DD\n        const year = now.getFullYear();\n        const month = String(now.getMonth() + 1).padStart(2, '0');\n        const day = String(now.getDate()).padStart(2, '0');\n        const dateStr = \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n        // รูปแบบเวลา HH-MM-SS-AM/PM\n        let hours = now.getHours();\n        const ampm = hours >= 12 ? 'PM' : 'AM';\n        hours = hours % 12;\n        hours = hours ? hours : 12; // ถ้าเป็น 0 ให้แสดงเป็น 12\n        const minutes = String(now.getMinutes()).padStart(2, '0');\n        const seconds = String(now.getSeconds()).padStart(2, '0');\n        const timeStr = \"\".concat(String(hours).padStart(2, '0'), \"-\").concat(minutes, \"-\").concat(seconds, \"-\").concat(ampm);\n        // รวมเป็น timestamp string\n        const formattedTimestamp = \"\".concat(dateStr, \"_\").concat(timeStr);\n        // สร้าง document ID ในรูปแบบ username_YYYY-MM-DD_HH-MM-SS-AM/PM\n        const docId = \"\".concat(userData.username, \"_\").concat(formattedTimestamp);\n        // เพิ่มข้อมูลเพิ่มเติม\n        const now_iso = now.toISOString();\n        const newUserData = {\n            ...userData,\n            createdAt: now_iso,\n            updatedAt: now_iso,\n            lastLogin: null,\n            sessionToken: null,\n            sessionId: null\n        };\n        // บันทึกข้อมูลผู้ใช้ใหม่ด้วย ID ที่กำหนดเอง\n        await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.setDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', docId), newUserData);\n        return {\n            success: true,\n            message: 'User added successfully',\n            userId: docId\n        };\n    } catch (error) {\n        console.error('Error adding user:', error);\n        return {\n            success: false,\n            error: error.message\n        };\n    }\n};\n/**\n * ฟังก์ชันออกจากระบบ\n * @param {string} userId - ID ของผู้ใช้\n * @param {string} sessionToken - Token ของ session ที่ต้องการยกเลิก\n * @param {string} sessionId - ID ของ session ที่ต้องการยกเลิก\n * @returns {Promise<Object>} - ผลลัพธ์การออกจากระบบ\n */ const logoutUser = async (userId, sessionToken, sessionId)=>{\n    try {\n        console.log('[DEBUG-LOGOUT] Logging out user:', userId);\n        if (!userId || !sessionToken) {\n            console.warn('[DEBUG-LOGOUT] Missing user ID or session token');\n            return {\n                success: false,\n                error: 'ข้อมูลผู้ใช้ไม่ครบถ้วน'\n            };\n        }\n        const results = {\n            success: true,\n            messages: []\n        };\n        const nowIso = new Date().toISOString();\n        // บันทึกประวัติการล็อกเอาท์ก่อนที่จะลบข้อมูล\n        try {\n            await logUserActivity(userId, 'logout', {\n                sessionId,\n                sessionToken,\n                logoutTime: nowIso\n            });\n            results.messages.push('Logout activity logged');\n        } catch (logError) {\n            console.error('[DEBUG-LOGOUT] Error logging logout activity:', logError);\n        // ไม่ทำให้กระบวนการทั้งหมดล้มเหลว\n        }\n        // ลบ session token ใน users collection\n        try {\n            console.log('[DEBUG-LOGOUT] Updating user document');\n            await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.updateDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'users', userId), {\n                sessionToken: null,\n                sessionId: null,\n                lastLogout: nowIso\n            });\n            results.messages.push('Updated user session data');\n        } catch (userError) {\n            console.error('[DEBUG-LOGOUT] Error updating user document:', userError);\n            results.messages.push(\"Error updating user: \".concat(userError.message));\n            results.success = false;\n        }\n        // ลบข้อมูลใน userSessions collection (ถ้ามี sessionId)\n        if (sessionId) {\n            try {\n                console.log('[DEBUG-LOGOUT] Deleting session document');\n                await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionId));\n                results.messages.push('Deleted session document');\n            } catch (sessionError) {\n                console.error('[DEBUG-LOGOUT] Error deleting session document:', sessionError);\n                results.messages.push(\"Error deleting session: \".concat(sessionError.message));\n            // ไม่ได้ทำให้ทั้งกระบวนการล้มเหลว\n            }\n        }\n        // ลบ sessions ที่เกี่ยวข้องกับผู้ใช้ทั้งหมด (เผื่อมีหลาย session)\n        try {\n            console.log('[DEBUG-LOGOUT] Checking for other active sessions');\n            const sessionsQuery = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('userId', '==', userId));\n            const sessionsSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(sessionsQuery);\n            if (!sessionsSnapshot.empty) {\n                const deletePromises = [];\n                sessionsSnapshot.forEach((sessionDoc)=>{\n                    // ไม่ลบ document ที่เราลบไปแล้วข้างบน\n                    if (sessionDoc.id !== sessionId) {\n                        deletePromises.push((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.deleteDoc)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'userSessions', sessionDoc.id)));\n                    }\n                });\n                if (deletePromises.length > 0) {\n                    await Promise.all(deletePromises);\n                    results.messages.push(\"Deleted \".concat(deletePromises.length, \" additional sessions\"));\n                }\n            }\n        } catch (sessionsError) {\n            console.warn('[DEBUG-LOGOUT] Error cleaning up additional sessions:', sessionsError);\n            results.messages.push(\"Warning: \".concat(sessionsError.message));\n        // ไม่ได้ทำให้ทั้งกระบวนการล้มเหลว\n        }\n        console.log('[DEBUG-LOGOUT] Logout completed successfully');\n        return results;\n    } catch (error) {\n        console.error('[DEBUG-LOGOUT] Unexpected error during logout:', error);\n        return {\n            success: false,\n            error: 'เกิดข้อผิดพลาดในการออกจากระบบ'\n        };\n    }\n};\n/**\n * ฟังก์ชันดึงข้อมูลวอร์ดตามวันที่ กะงาน และรหัสวอร์ด\n * @param {string} date วันที่ในรูปแบบ 'yyyy-MM-dd'\n * @param {string} shift กะงาน ('เช้า', 'ดึก' หรือชื่อกะอื่นๆ)\n * @param {string} wardId รหัสวอร์ด\n * @returns {Promise<Object|null>} ข้อมูลวอร์ดหรือ null ถ้าไม่พบ\n */ const getWardDataByDate = async (date, shift, wardId)=>{\n    try {\n        if (!date || !shift || !wardId) {\n            console.error('getWardDataByDate: Missing parameters');\n            return null;\n        }\n        // ค้นหาในข้อมูลสำเร็จก่อน\n        const finalRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataFinal'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId));\n        const finalSnapshots = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(finalRef);\n        if (!finalSnapshots.empty) {\n            // มีข้อมูลในฐานข้อมูลสำเร็จ\n            const finalData = finalSnapshots.docs[0].data();\n            return {\n                id: finalSnapshots.docs[0].id,\n                ...finalData,\n                source: 'final'\n            };\n        }\n        // ถ้าไม่พบในข้อมูลสำเร็จ ให้ค้นหาในข้อมูลร่าง\n        const draftRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.query)((0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.collection)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, 'wardDataDrafts'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('date', '==', date), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('shift', '==', shift), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.where)('wardId', '==', wardId), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.orderBy)('timestamp', 'desc'), (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.limit)(1));\n        const draftSnapshots = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDocs)(draftRef);\n        if (!draftSnapshots.empty) {\n            // มีข้อมูลในฐานข้อมูลร่าง\n            const draftData = draftSnapshots.docs[0].data();\n            return {\n                id: draftSnapshots.docs[0].id,\n                ...draftData,\n                source: 'draft'\n            };\n        }\n        // ไม่พบข้อมูลทั้งในข้อมูลสำเร็จและข้อมูลร่าง\n        return null;\n    } catch (error) {\n        console.error('Error getting ward data by date:', error);\n        return null;\n    }\n};\n/**\n * ฟังก์ชันดึงข้อมูลผู้ใช้จาก collection\n * @param {string} collectionName ชื่อ collection\n * @param {string} userId รหัสผู้ใช้\n * @returns {Promise<Object|null>} ข้อมูลผู้ใช้หรือ null ถ้าไม่พบ\n */ const getUserDataFromCollection = async (collectionName, userId)=>{\n    try {\n        if (!collectionName || !userId) {\n            console.error('getUserDataFromCollection: Missing parameters');\n            return null;\n        }\n        const userRef = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.doc)(_firebase__WEBPACK_IMPORTED_MODULE_1__.db, collectionName, userId);\n        const userSnapshot = await (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_0__.getDoc)(userRef);\n        if (userSnapshot.exists()) {\n            return {\n                id: userSnapshot.id,\n                ...userSnapshot.data()\n            };\n        }\n        return null;\n    } catch (error) {\n        console.error(\"Error getting user data from \".concat(collectionName, \":\"), error);\n        return null;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/dataAccess.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/lib/firebase.js":
/*!*****************************!*\
  !*** ./app/lib/firebase.js ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   auth: () => (/* binding */ auth),\n/* harmony export */   db: () => (/* binding */ db),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"(app-pages-browser)/./node_modules/firebase/app/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/firestore */ \"(app-pages-browser)/./node_modules/firebase/firestore/dist/esm/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/auth */ \"(app-pages-browser)/./node_modules/firebase/auth/dist/esm/index.esm.js\");\n/* __next_internal_client_entry_do_not_use__ db,auth,default auto */ \n\n\n// แสดงค่า environment variables ออกมาเพื่อตรวจสอบ (ลบออกหลังจากแก้ปัญหาแล้ว)\nconsole.log('Firebase Config Environment Variables:');\nconsole.log('API Key available:', !!\"AIzaSyB9sZFJSn8cvkos5fysi47VpqJc5AsorA4\");\nconsole.log('Auth Domain available:', !!\"manpower-patient-summary.firebaseapp.com\");\nconsole.log('Project ID available:', !!\"manpower-patient-summary\");\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB9sZFJSn8cvkos5fysi47VpqJc5AsorA4\" || 0,\n    authDomain: \"manpower-patient-summary.firebaseapp.com\" || 0,\n    projectId: \"manpower-patient-summary\" || 0,\n    storageBucket: \"manpower-patient-summary.firebasestorage.app\" || 0,\n    messagingSenderId: \"644057496880\" || 0,\n    appId: \"1:644057496880:web:6270efc29187b9c025dcf5\" || 0\n};\nconsole.log('Using Firebase config:', {\n    ...firebaseConfig,\n    apiKey: 'HIDDEN'\n});\n// ประกาศตัวแปรนอก try-catch เพื่อให้สามารถ export ได้\nlet app = null;\nlet db = null;\nlet auth = null;\ntry {\n    // Check if Firebase app is already initialized\n    app = !(0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length ? (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(firebaseConfig) : (0,firebase_app__WEBPACK_IMPORTED_MODULE_0__.getApps)()[0];\n    // Initialize Firebase services\n    db = (0,firebase_firestore__WEBPACK_IMPORTED_MODULE_1__.getFirestore)(app);\n    auth = (0,firebase_auth__WEBPACK_IMPORTED_MODULE_2__.getAuth)(app);\n    console.log('Firebase initialized successfully');\n} catch (error) {\n    console.error('Error initializing Firebase:', error);\n// ตัวแปร app, db และ auth จะยังคงเป็น null ถ้าเกิด error\n}\n// Export นอก try-catch block\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (app);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWIvZmlyZWJhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FFQUVzRDtBQUNKO0FBQ1Y7QUFFeEMsNkVBQTZFO0FBQzdFSSxRQUFRQyxHQUFHLENBQUM7QUFDWkQsUUFBUUMsR0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUNDLHlDQUF3QztBQUM1RUYsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQixDQUFDLENBQUNDLDBDQUE0QztBQUNwRkYsUUFBUUMsR0FBRyxDQUFDLHlCQUF5QixDQUFDLENBQUNDLDBCQUEyQztBQUVsRixNQUFNSyxpQkFBaUI7SUFDckJDLFFBQVFOLHlDQUF3QyxJQUFJLENBQXlDO0lBQzdGTyxZQUFZUCwwQ0FBNEMsSUFBSSxDQUEwQztJQUN0R1EsV0FBV1IsMEJBQTJDLElBQUksQ0FBMEI7SUFDcEZTLGVBQWVULDhDQUErQyxJQUFJLENBQThDO0lBQ2hIVyxtQkFBbUJYLGNBQW9ELElBQUksQ0FBYztJQUN6RmEsT0FBT2IsMkNBQXVDLElBQUksQ0FBMkM7QUFDL0Y7QUFFQUYsUUFBUUMsR0FBRyxDQUFDLDBCQUEwQjtJQUFDLEdBQUdNLGNBQWM7SUFBRUMsUUFBUTtBQUFRO0FBRTFFLHNEQUFzRDtBQUN0RCxJQUFJUyxNQUFNO0FBQ1YsSUFBSUMsS0FBSztBQUNULElBQUlDLE9BQU87QUFFWCxJQUFJO0lBQ0YsK0NBQStDO0lBQy9DRixNQUFNLENBQUNwQixxREFBT0EsR0FBR3VCLE1BQU0sR0FBR3hCLDJEQUFhQSxDQUFDVyxrQkFBa0JWLHFEQUFPQSxFQUFFLENBQUMsRUFBRTtJQUV0RSwrQkFBK0I7SUFDL0JxQixLQUFLcEIsZ0VBQVlBLENBQUNtQjtJQUNsQkUsT0FBT3BCLHNEQUFPQSxDQUFDa0I7SUFFZmpCLFFBQVFDLEdBQUcsQ0FBQztBQUNkLEVBQUUsT0FBT29CLE9BQU87SUFDZHJCLFFBQVFxQixLQUFLLENBQUMsZ0NBQWdDQTtBQUM5Qyx5REFBeUQ7QUFDM0Q7QUFFQSw2QkFBNkI7QUFDVDtBQUNwQixpRUFBZUosR0FBR0EsRUFBQyIsInNvdXJjZXMiOlsiQzpcXEFjdGl2ZSAxNC0zLTIwMjVcXFN1bW1hcnlfb2ZfUGVyc29ubmVsX1JhdGlvXFxhcHBcXGxpYlxcZmlyZWJhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xyXG5cclxuaW1wb3J0IHsgaW5pdGlhbGl6ZUFwcCwgZ2V0QXBwcyB9IGZyb20gJ2ZpcmViYXNlL2FwcCc7XHJcbmltcG9ydCB7IGdldEZpcmVzdG9yZSB9IGZyb20gJ2ZpcmViYXNlL2ZpcmVzdG9yZSc7XHJcbmltcG9ydCB7IGdldEF1dGggfSBmcm9tICdmaXJlYmFzZS9hdXRoJztcclxuXHJcbi8vIOC5geC4quC4lOC4h+C4hOC5iOC4siBlbnZpcm9ubWVudCB2YXJpYWJsZXMg4Lit4Lit4LiB4Lih4Liy4LmA4Lie4Li34LmI4Lit4LiV4Lij4Lin4LiI4Liq4Lit4LiaICjguKXguJrguK3guK3guIHguKvguKXguLHguIfguIjguLLguIHguYHguIHguYnguJvguLHguI3guKvguLLguYHguKXguYnguKcpXHJcbmNvbnNvbGUubG9nKCdGaXJlYmFzZSBDb25maWcgRW52aXJvbm1lbnQgVmFyaWFibGVzOicpO1xyXG5jb25zb2xlLmxvZygnQVBJIEtleSBhdmFpbGFibGU6JywgISFwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUElfS0VZKTtcclxuY29uc29sZS5sb2coJ0F1dGggRG9tYWluIGF2YWlsYWJsZTonLCAhIXByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FVVEhfRE9NQUlOKTtcclxuY29uc29sZS5sb2coJ1Byb2plY3QgSUQgYXZhaWxhYmxlOicsICEhcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCk7XHJcblxyXG5jb25zdCBmaXJlYmFzZUNvbmZpZyA9IHtcclxuICBhcGlLZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJUkVCQVNFX0FQSV9LRVkgfHwgJ0FJemFTeUI5c1pGSlNuOGN2a29zNWZ5c2k0N1ZwcUpjNUFzb3JBNCcsXHJcbiAgYXV0aERvbWFpbjogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4gfHwgJ21hbnBvd2VyLXBhdGllbnQtc3VtbWFyeS5maXJlYmFzZWFwcC5jb20nLFxyXG4gIHByb2plY3RJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRklSRUJBU0VfUFJPSkVDVF9JRCB8fCAnbWFucG93ZXItcGF0aWVudC1zdW1tYXJ5JyxcclxuICBzdG9yYWdlQnVja2V0OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9TVE9SQUdFX0JVQ0tFVCB8fCAnbWFucG93ZXItcGF0aWVudC1zdW1tYXJ5LmZpcmViYXNlc3RvcmFnZS5hcHAnLFxyXG4gIG1lc3NhZ2luZ1NlbmRlcklkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIHx8ICc2NDQwNTc0OTY4ODAnLFxyXG4gIGFwcElkOiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQgfHwgJzE6NjQ0MDU3NDk2ODgwOndlYjo2MjcwZWZjMjkxODdiOWMwMjVkY2Y1J1xyXG59O1xyXG5cclxuY29uc29sZS5sb2coJ1VzaW5nIEZpcmViYXNlIGNvbmZpZzonLCB7Li4uZmlyZWJhc2VDb25maWcsIGFwaUtleTogJ0hJRERFTid9KTtcclxuXHJcbi8vIOC4m+C4o+C4sOC4geC4suC4qOC4leC4seC4p+C5geC4m+C4o+C4meC4reC4gSB0cnktY2F0Y2gg4LmA4Lie4Li34LmI4Lit4LmD4Lir4LmJ4Liq4Liy4Lih4Liy4Lij4LiWIGV4cG9ydCDguYTguJTguYlcclxubGV0IGFwcCA9IG51bGw7XHJcbmxldCBkYiA9IG51bGw7XHJcbmxldCBhdXRoID0gbnVsbDtcclxuXHJcbnRyeSB7XHJcbiAgLy8gQ2hlY2sgaWYgRmlyZWJhc2UgYXBwIGlzIGFscmVhZHkgaW5pdGlhbGl6ZWRcclxuICBhcHAgPSAhZ2V0QXBwcygpLmxlbmd0aCA/IGluaXRpYWxpemVBcHAoZmlyZWJhc2VDb25maWcpIDogZ2V0QXBwcygpWzBdO1xyXG5cclxuICAvLyBJbml0aWFsaXplIEZpcmViYXNlIHNlcnZpY2VzXHJcbiAgZGIgPSBnZXRGaXJlc3RvcmUoYXBwKTtcclxuICBhdXRoID0gZ2V0QXV0aChhcHApO1xyXG5cclxuICBjb25zb2xlLmxvZygnRmlyZWJhc2UgaW5pdGlhbGl6ZWQgc3VjY2Vzc2Z1bGx5Jyk7XHJcbn0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgY29uc29sZS5lcnJvcignRXJyb3IgaW5pdGlhbGl6aW5nIEZpcmViYXNlOicsIGVycm9yKTtcclxuICAvLyDguJXguLHguKfguYHguJvguKMgYXBwLCBkYiDguYHguKXguLAgYXV0aCDguIjguLDguKLguLHguIfguITguIfguYDguJvguYfguJkgbnVsbCDguJbguYnguLLguYDguIHguLTguJQgZXJyb3JcclxufVxyXG5cclxuLy8gRXhwb3J0IOC4meC4reC4gSB0cnktY2F0Y2ggYmxvY2tcclxuZXhwb3J0IHsgZGIsIGF1dGggfTtcclxuZXhwb3J0IGRlZmF1bHQgYXBwO1xyXG4iXSwibmFtZXMiOlsiaW5pdGlhbGl6ZUFwcCIsImdldEFwcHMiLCJnZXRGaXJlc3RvcmUiLCJnZXRBdXRoIiwiY29uc29sZSIsImxvZyIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUElfS0VZIiwiTkVYVF9QVUJMSUNfRklSRUJBU0VfQVVUSF9ET01BSU4iLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9QUk9KRUNUX0lEIiwiZmlyZWJhc2VDb25maWciLCJhcGlLZXkiLCJhdXRoRG9tYWluIiwicHJvamVjdElkIiwic3RvcmFnZUJ1Y2tldCIsIk5FWFRfUFVCTElDX0ZJUkVCQVNFX1NUT1JBR0VfQlVDS0VUIiwibWVzc2FnaW5nU2VuZGVySWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9NRVNTQUdJTkdfU0VOREVSX0lEIiwiYXBwSWQiLCJORVhUX1BVQkxJQ19GSVJFQkFTRV9BUFBfSUQiLCJhcHAiLCJkYiIsImF1dGgiLCJsZW5ndGgiLCJlcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/lib/firebase.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/clientLogging.js":
/*!************************************!*\
  !*** ./app/utils/clientLogging.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearLogs: () => (/* binding */ clearLogs),\n/* harmony export */   getLogs: () => (/* binding */ getLogs),\n/* harmony export */   logEvent: () => (/* binding */ logEvent)\n/* harmony export */ });\n// Local storage key for logs\nconst LOGS_STORAGE_KEY = 'app_logs';\nconst MAX_LOGS = 1000;\n// ส่ง log ไปยัง server\nconst sendLogToServer = async (log)=>{\n    try {\n        const response = await fetch('/api/logs', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(log)\n        });\n        if (!response.ok) {\n            throw new Error(\"Server responded with status \".concat(response.status));\n        }\n        return true;\n    } catch (error) {\n        console.warn('Failed to send log to server:', error);\n        return false;\n    }\n};\nconst logEvent = async function(name) {\n    let properties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    try {\n        const log = {\n            timestamp: new Date().toISOString(),\n            event: name,\n            properties\n        };\n        // Get existing logs\n        const existingLogs = JSON.parse(localStorage.getItem(LOGS_STORAGE_KEY) || '[]');\n        // Add new log\n        existingLogs.push(log);\n        // Keep only the latest MAX_LOGS entries\n        const trimmedLogs = existingLogs.slice(-MAX_LOGS);\n        // Save back to localStorage\n        localStorage.setItem(LOGS_STORAGE_KEY, JSON.stringify(trimmedLogs));\n        // Development logging\n        if (true) {\n            console.log(\"[Event: \".concat(name, \"]\"), properties);\n        }\n        // ส่ง log ไปยัง server (ไม่รอการตอบกลับ)\n        sendLogToServer(log).catch((error)=>{\n            console.warn('Error sending log to server:', error);\n        });\n        // If you have external logging service (optional)\n        if (false) {}\n    } catch (error) {\n        console.warn('Logging failed:', error);\n    }\n};\nconst getLogs = ()=>{\n    try {\n        return JSON.parse(localStorage.getItem(LOGS_STORAGE_KEY) || '[]');\n    } catch (error) {\n        console.warn('Failed to retrieve logs:', error);\n        return [];\n    }\n};\nconst clearLogs = ()=>{\n    try {\n        localStorage.setItem(LOGS_STORAGE_KEY, '[]');\n    } catch (error) {\n        console.warn('Failed to clear logs:', error);\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9jbGllbnRMb2dnaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDZCQUE2QjtBQUM3QixNQUFNQSxtQkFBbUI7QUFDekIsTUFBTUMsV0FBVztBQUVqQix1QkFBdUI7QUFDdkIsTUFBTUMsa0JBQWtCLE9BQU9DO0lBQzdCLElBQUk7UUFDRixNQUFNQyxXQUFXLE1BQU1DLE1BQU0sYUFBYTtZQUN4Q0MsUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDUDtRQUN2QjtRQUVBLElBQUksQ0FBQ0MsU0FBU08sRUFBRSxFQUFFO1lBQ2hCLE1BQU0sSUFBSUMsTUFBTSxnQ0FBZ0QsT0FBaEJSLFNBQVNTLE1BQU07UUFDakU7UUFFQSxPQUFPO0lBQ1QsRUFBRSxPQUFPQyxPQUFPO1FBQ2RDLFFBQVFDLElBQUksQ0FBQyxpQ0FBaUNGO1FBQzlDLE9BQU87SUFDVDtBQUNGO0FBRU8sTUFBTUcsV0FBVyxlQUFPQztRQUFNQyw4RUFBYSxDQUFDO0lBQ2pELElBQUk7UUFDRixNQUFNaEIsTUFBTTtZQUNWaUIsV0FBVyxJQUFJQyxPQUFPQyxXQUFXO1lBQ2pDQyxPQUFPTDtZQUNQQztRQUNGO1FBRUEsb0JBQW9CO1FBQ3BCLE1BQU1LLGVBQWVmLEtBQUtnQixLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQzNCLHFCQUFxQjtRQUUxRSxjQUFjO1FBQ2R3QixhQUFhSSxJQUFJLENBQUN6QjtRQUVsQix3Q0FBd0M7UUFDeEMsTUFBTTBCLGNBQWNMLGFBQWFNLEtBQUssQ0FBQyxDQUFDN0I7UUFFeEMsNEJBQTRCO1FBQzVCeUIsYUFBYUssT0FBTyxDQUFDL0Isa0JBQWtCUyxLQUFLQyxTQUFTLENBQUNtQjtRQUV0RCxzQkFBc0I7UUFDdEIsSUFBSUcsSUFBc0MsRUFBRTtZQUMxQ2pCLFFBQVFaLEdBQUcsQ0FBQyxXQUFnQixPQUFMZSxNQUFLLE1BQUlDO1FBQ2xDO1FBRUEseUNBQXlDO1FBQ3pDakIsZ0JBQWdCQyxLQUFLOEIsS0FBSyxDQUFDbkIsQ0FBQUE7WUFDekJDLFFBQVFDLElBQUksQ0FBQyxnQ0FBZ0NGO1FBQy9DO1FBRUEsa0RBQWtEO1FBQ2xELElBQUlrQixLQUFxRixFQUFFLEVBTTFGO0lBQ0gsRUFBRSxPQUFPbEIsT0FBTztRQUNkQyxRQUFRQyxJQUFJLENBQUMsbUJBQW1CRjtJQUNsQztBQUNGLEVBQUU7QUFFSyxNQUFNc0IsVUFBVTtJQUNyQixJQUFJO1FBQ0YsT0FBTzNCLEtBQUtnQixLQUFLLENBQUNDLGFBQWFDLE9BQU8sQ0FBQzNCLHFCQUFxQjtJQUM5RCxFQUFFLE9BQU9jLE9BQU87UUFDZEMsUUFBUUMsSUFBSSxDQUFDLDRCQUE0QkY7UUFDekMsT0FBTyxFQUFFO0lBQ1g7QUFDRixFQUFFO0FBRUssTUFBTXVCLFlBQVk7SUFDdkIsSUFBSTtRQUNGWCxhQUFhSyxPQUFPLENBQUMvQixrQkFBa0I7SUFDekMsRUFBRSxPQUFPYyxPQUFPO1FBQ2RDLFFBQVFDLElBQUksQ0FBQyx5QkFBeUJGO0lBQ3hDO0FBQ0YsRUFBRSIsInNvdXJjZXMiOlsiQzpcXEFjdGl2ZSAxNC0zLTIwMjVcXFN1bW1hcnlfb2ZfUGVyc29ubmVsX1JhdGlvXFxhcHBcXHV0aWxzXFxjbGllbnRMb2dnaW5nLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIExvY2FsIHN0b3JhZ2Uga2V5IGZvciBsb2dzXHJcbmNvbnN0IExPR1NfU1RPUkFHRV9LRVkgPSAnYXBwX2xvZ3MnO1xyXG5jb25zdCBNQVhfTE9HUyA9IDEwMDA7XHJcblxyXG4vLyDguKrguYjguIcgbG9nIOC5hOC4m+C4ouC4seC4hyBzZXJ2ZXJcclxuY29uc3Qgc2VuZExvZ1RvU2VydmVyID0gYXN5bmMgKGxvZykgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCcvYXBpL2xvZ3MnLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkobG9nKSxcclxuICAgIH0pO1xyXG4gICAgXHJcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihgU2VydmVyIHJlc3BvbmRlZCB3aXRoIHN0YXR1cyAke3Jlc3BvbnNlLnN0YXR1c31gKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIHNlbmQgbG9nIHRvIHNlcnZlcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ0V2ZW50ID0gYXN5bmMgKG5hbWUsIHByb3BlcnRpZXMgPSB7fSkgPT4ge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBsb2cgPSB7XHJcbiAgICAgIHRpbWVzdGFtcDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxyXG4gICAgICBldmVudDogbmFtZSxcclxuICAgICAgcHJvcGVydGllcyxcclxuICAgIH07XHJcblxyXG4gICAgLy8gR2V0IGV4aXN0aW5nIGxvZ3NcclxuICAgIGNvbnN0IGV4aXN0aW5nTG9ncyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9HU19TVE9SQUdFX0tFWSkgfHwgJ1tdJyk7XHJcbiAgICBcclxuICAgIC8vIEFkZCBuZXcgbG9nXHJcbiAgICBleGlzdGluZ0xvZ3MucHVzaChsb2cpO1xyXG4gICAgXHJcbiAgICAvLyBLZWVwIG9ubHkgdGhlIGxhdGVzdCBNQVhfTE9HUyBlbnRyaWVzXHJcbiAgICBjb25zdCB0cmltbWVkTG9ncyA9IGV4aXN0aW5nTG9ncy5zbGljZSgtTUFYX0xPR1MpO1xyXG4gICAgXHJcbiAgICAvLyBTYXZlIGJhY2sgdG8gbG9jYWxTdG9yYWdlXHJcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0dTX1NUT1JBR0VfS0VZLCBKU09OLnN0cmluZ2lmeSh0cmltbWVkTG9ncykpO1xyXG5cclxuICAgIC8vIERldmVsb3BtZW50IGxvZ2dpbmdcclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xyXG4gICAgICBjb25zb2xlLmxvZyhgW0V2ZW50OiAke25hbWV9XWAsIHByb3BlcnRpZXMpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIOC4quC5iOC4hyBsb2cg4LmE4Lib4Lii4Lix4LiHIHNlcnZlciAo4LmE4Lih4LmI4Lij4Lit4LiB4Liy4Lij4LiV4Lit4Lia4LiB4Lil4Lix4LiaKVxyXG4gICAgc2VuZExvZ1RvU2VydmVyKGxvZykuY2F0Y2goZXJyb3IgPT4ge1xyXG4gICAgICBjb25zb2xlLndhcm4oJ0Vycm9yIHNlbmRpbmcgbG9nIHRvIHNlcnZlcjonLCBlcnJvcik7XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBJZiB5b3UgaGF2ZSBleHRlcm5hbCBsb2dnaW5nIHNlcnZpY2UgKG9wdGlvbmFsKVxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicgJiYgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRVhURVJOQUxfTE9HR0lOR19VUkwpIHtcclxuICAgICAgZmV0Y2gocHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfRVhURVJOQUxfTE9HR0lOR19VUkwsIHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7ICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShsb2cpXHJcbiAgICAgIH0pLmNhdGNoKGNvbnNvbGUuZXJyb3IpO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ0xvZ2dpbmcgZmFpbGVkOicsIGVycm9yKTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgZ2V0TG9ncyA9ICgpID0+IHtcclxuICB0cnkge1xyXG4gICAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oTE9HU19TVE9SQUdFX0tFWSkgfHwgJ1tdJyk7XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUud2FybignRmFpbGVkIHRvIHJldHJpZXZlIGxvZ3M6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIFtdO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjbGVhckxvZ3MgPSAoKSA9PiB7XHJcbiAgdHJ5IHtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKExPR1NfU1RPUkFHRV9LRVksICdbXScpO1xyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLndhcm4oJ0ZhaWxlZCB0byBjbGVhciBsb2dzOicsIGVycm9yKTtcclxuICB9XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJMT0dTX1NUT1JBR0VfS0VZIiwiTUFYX0xPR1MiLCJzZW5kTG9nVG9TZXJ2ZXIiLCJsb2ciLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwib2siLCJFcnJvciIsInN0YXR1cyIsImVycm9yIiwiY29uc29sZSIsIndhcm4iLCJsb2dFdmVudCIsIm5hbWUiLCJwcm9wZXJ0aWVzIiwidGltZXN0YW1wIiwiRGF0ZSIsInRvSVNPU3RyaW5nIiwiZXZlbnQiLCJleGlzdGluZ0xvZ3MiLCJwYXJzZSIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwdXNoIiwidHJpbW1lZExvZ3MiLCJzbGljZSIsInNldEl0ZW0iLCJwcm9jZXNzIiwiY2F0Y2giLCJlbnYiLCJORVhUX1BVQkxJQ19FWFRFUk5BTF9MT0dHSU5HX1VSTCIsImdldExvZ3MiLCJjbGVhckxvZ3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/clientLogging.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/utils/sessionRecording.js":
/*!***************************************!*\
  !*** ./app/utils/sessionRecording.js ***!
  \***************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   identifyUser: () => (/* binding */ identifyUser),\n/* harmony export */   initSessionRecording: () => (/* binding */ initSessionRecording),\n/* harmony export */   logEvent: () => (/* binding */ logEvent)\n/* harmony export */ });\n/* harmony import */ var _clientLogging__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clientLogging */ \"(app-pages-browser)/./app/utils/clientLogging.js\");\n\nconst logEvent = function(name) {\n    let properties = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    (0,_clientLogging__WEBPACK_IMPORTED_MODULE_0__.logEvent)(name, properties);\n};\nconst initSessionRecording = ()=>{\n// No initialization needed\n};\nconst identifyUser = function(userId) {\n    let userInfo = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    (0,_clientLogging__WEBPACK_IMPORTED_MODULE_0__.logEvent)('user_identified', {\n        userId,\n        ...userInfo\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9zZXNzaW9uUmVjb3JkaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkQ7QUFFdEQsTUFBTUEsV0FBVyxTQUFDRTtRQUFNQyw4RUFBYSxDQUFDO0lBQzNDRix3REFBY0EsQ0FBQ0MsTUFBTUM7QUFDdkIsRUFBRTtBQUVLLE1BQU1DLHVCQUF1QjtBQUNsQywyQkFBMkI7QUFDN0IsRUFBRTtBQUVLLE1BQU1DLGVBQWUsU0FBQ0M7UUFBUUMsNEVBQVcsQ0FBQztJQUMvQ04sd0RBQWNBLENBQUMsbUJBQW1CO1FBQUVLO1FBQVEsR0FBR0MsUUFBUTtJQUFDO0FBQzFELEVBQUUiLCJzb3VyY2VzIjpbIkM6XFxBY3RpdmUgMTQtMy0yMDI1XFxTdW1tYXJ5X29mX1BlcnNvbm5lbF9SYXRpb1xcYXBwXFx1dGlsc1xcc2Vzc2lvblJlY29yZGluZy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2dFdmVudCBhcyBjbGllbnRMb2dFdmVudCB9IGZyb20gJy4vY2xpZW50TG9nZ2luZyc7XHJcblxyXG5leHBvcnQgY29uc3QgbG9nRXZlbnQgPSAobmFtZSwgcHJvcGVydGllcyA9IHt9KSA9PiB7XHJcbiAgY2xpZW50TG9nRXZlbnQobmFtZSwgcHJvcGVydGllcyk7XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaW5pdFNlc3Npb25SZWNvcmRpbmcgPSAoKSA9PiB7XHJcbiAgLy8gTm8gaW5pdGlhbGl6YXRpb24gbmVlZGVkXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgaWRlbnRpZnlVc2VyID0gKHVzZXJJZCwgdXNlckluZm8gPSB7fSkgPT4ge1xyXG4gIGNsaWVudExvZ0V2ZW50KCd1c2VyX2lkZW50aWZpZWQnLCB7IHVzZXJJZCwgLi4udXNlckluZm8gfSk7XHJcbn07XHJcbiJdLCJuYW1lcyI6WyJsb2dFdmVudCIsImNsaWVudExvZ0V2ZW50IiwibmFtZSIsInByb3BlcnRpZXMiLCJpbml0U2Vzc2lvblJlY29yZGluZyIsImlkZW50aWZ5VXNlciIsInVzZXJJZCIsInVzZXJJbmZvIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/sessionRecording.js\n"));

/***/ })

}]);